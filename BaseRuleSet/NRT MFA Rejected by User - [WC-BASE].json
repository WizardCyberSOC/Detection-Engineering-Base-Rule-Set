{
    "contentVersion":  "1.0.0.0",
    "$schema":  "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
    "resources":  [
                      {
                          "id":  "[concat(resourceId(\u0027Microsoft.OperationalInsights/workspaces/providers\u0027, parameters(\u0027workspace\u0027), \u0027Microsoft.SecurityInsights\u0027),\u0027/alertRules/1bf39bb5-2d21-4f2a-8dce-22c9312d7b9e\u0027)]",
                          "name":  "[concat(parameters(\u0027workspace\u0027),\u0027/Microsoft.SecurityInsights/1bf39bb5-2d21-4f2a-8dce-22c9312d7b9e\u0027)]",
                          "type":  "Microsoft.OperationalInsights/workspaces/providers/alertRules",
                          "kind":  "Scheduled",
                          "apiVersion":  "2023-12-01-preview",
                          "properties":  {
                                             "displayName":  "NRT MFA Rejected by User - [WC-BASE]",
                                             "description":  "Detects near-real-time (NRT) MFA prompts that were explicitly denied by the user, especially when originating from unfamiliar devices, locations, or IP subnets. This may indicate attempted unauthorized access, and the user actively rejected the login attempt.",
                                             "severity":  "Low",
                                             "enabled":  true,
                                             "query":  "let ManagedAttempts = SigninLogs\r\n    | union AADNonInteractiveUserSignInLogs\r\n    | where TimeGenerated \u003e ago(47h)\r\n    | where (tostring(parse_json(DeviceDetail_dynamic).trustType) != \"\" or tostring(parse_json(DeviceDetail_string).trustType) != \"\") or (DeviceDetail_dynamic or DeviceDetail_string contains \"PII Removed\")\r\n    | distinct IPAddress;\r\nlet FamiliarProperties = SigninLogs\r\n| where TimeGenerated between (ago(47h) .. ago(1h))\r\n| where ResultType == 0\r\n| extend FamiliarDevice = tostring(DeviceDetail.operatingSystem), FamiliarCity = strcat(Location, \"-\", LocationDetails.state),\r\nFamiliarIPSubnet = iff(\r\n    indexof(IPAddress, \":\") != -1,  // If colon exists, it\u0027s IPv6\r\n    trim(\" \", substring(IPAddress, 0, indexof(IPAddress, \":\", indexof(IPAddress, \":\") + 1))),\r\n    trim(\" \", substring(IPAddress, 0, indexof(IPAddress, \".\", indexof(IPAddress, \".\") + 1)))\r\n)\r\n| summarize FamiliarDevices = make_set(FamiliarDevice),FamiliarCities = make_set(FamiliarCity), FamiliarIPSubnets = make_set(FamiliarIPSubnet) by UserPrincipalName;\r\nSigninLogs\r\n| where TimeGenerated \u003e ago(5m)\r\n| where ResultType == 500121\r\n| where tostring(parse_json(DeviceDetail).trustType) == \"\"\r\n| extend additionalDetails_ = tostring(Status.additionalDetails)\r\n| where additionalDetails_ =~ \"MFA denied; user declined the authentication\"\r\n| extend IPSubnet = iff(\r\n    indexof(IPAddress, \":\") != -1,  // If colon exists, it\u0027s IPv6\r\n    trim(\" \", substring(IPAddress, 0, indexof(IPAddress, \":\", indexof(IPAddress, \":\") + 1))),\r\n    trim(\" \", substring(IPAddress, 0, indexof(IPAddress, \".\", indexof(IPAddress, \".\") + 1)))\r\n),\r\nDevice = tostring(DeviceDetail.operatingSystem),\r\nCity =  strcat(Location, \"-\", LocationDetails.state) \r\n| join kind=leftanti ManagedAttempts on IPAddress\r\n| join kind=leftouter FamiliarProperties on UserPrincipalName\r\n| where not( (FamiliarDevices has Device) and (FamiliarIPSubnets has IPSubnet) and (FamiliarCities has City))",
                                             "queryFrequency":  "PT5M",
                                             "queryPeriod":  "PT47H",
                                             "triggerOperator":  "GreaterThan",
                                             "triggerThreshold":  0,
                                             "suppressionDuration":  "PT5H",
                                             "suppressionEnabled":  false,
                                             "startTimeUtc":  null,
                                             "tactics":  [
                                                             "CredentialAccess",
                                                             "InitialAccess"
                                                         ],
                                             "techniques":  [
                                                                "T1110",
                                                                "T1078",
                                                                "T1621"
                                                            ],
                                             "subTechniques":  [

                                                               ],
                                             "alertRuleTemplateName":  null,
                                             "incidentConfiguration":  {
                                                                           "createIncident":  true,
                                                                           "groupingConfiguration":  {
                                                                                                         "enabled":  false,
                                                                                                         "reopenClosedIncident":  false,
                                                                                                         "lookbackDuration":  "PT5H",
                                                                                                         "matchingMethod":  "AllEntities",
                                                                                                         "groupByEntities":  [

                                                                                                                             ],
                                                                                                         "groupByAlertDetails":  [

                                                                                                                                 ],
                                                                                                         "groupByCustomDetails":  [

                                                                                                                                  ]
                                                                                                     }
                                                                       },
                                             "eventGroupingSettings":  {
                                                                           "aggregationKind":  "SingleAlert"
                                                                       },
                                             "alertDetailsOverride":  null,
                                             "customDetails":  {
                                                                   "Location":  "Location"
                                                               },
                                             "entityMappings":  [
                                                                    {
                                                                        "entityType":  "Account",
                                                                        "fieldMappings":  [
                                                                                              {
                                                                                                  "identifier":  "FullName",
                                                                                                  "columnName":  "UserPrincipalName"
                                                                                              }
                                                                                          ]
                                                                    },
                                                                    {
                                                                        "entityType":  "IP",
                                                                        "fieldMappings":  [
                                                                                              {
                                                                                                  "identifier":  "Address",
                                                                                                  "columnName":  "IPAddress"
                                                                                              }
                                                                                          ]
                                                                    }
                                                                ],
                                             "sentinelEntitiesMappings":  null,
                                             "templateVersion":  null
                                         }
                      }
                  ],
    "parameters":  {
                       "workspace":  {
                                         "type":  "String"
                                     }
                   }
}