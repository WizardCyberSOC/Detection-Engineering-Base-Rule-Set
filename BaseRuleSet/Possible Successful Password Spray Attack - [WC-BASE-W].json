{
    "contentVersion":  "1.0.0.0",
    "$schema":  "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
    "resources":  [
                      {
                          "id":  "[concat(resourceId(\u0027Microsoft.OperationalInsights/workspaces/providers\u0027, parameters(\u0027workspace\u0027), \u0027Microsoft.SecurityInsights\u0027),\u0027/alertRules/7463bac0-22f0-40ec-a9ab-63c174a0547c\u0027)]",
                          "name":  "[concat(parameters(\u0027workspace\u0027),\u0027/Microsoft.SecurityInsights/7463bac0-22f0-40ec-a9ab-63c174a0547c\u0027)]",
                          "type":  "Microsoft.OperationalInsights/workspaces/providers/alertRules",
                          "kind":  "Scheduled",
                          "apiVersion":  "2023-12-01-preview",
                          "properties":  {
                                             "displayName":  "Possible Successful Password Spray Attack - [WC-BASE-W]",
                                             "description":  "This rule identifies instances where two or more users from the same IP address enter incorrect passwords, followed by a successful sign-in or correct password entry from the same IP.",
                                             "severity":  "High",
                                             "enabled":  true,
                                             "query":  "let PasswordSprayIP = SigninLogs\r\n    | union AADNonInteractiveUserSignInLogs\r\n    | where TimeGenerated \u003e ago(1h) // Rule Frequency\r\n    | where ResultType in (50126, 50053)\r\n    | summarize NumberOfUsers = dcount(UserPrincipalName) by IPAddress\r\n    | where NumberOfUsers \u003e 1; // Adjust value to tune\r\nlet FamiliarIP = SigninLogs\r\n    | union AADNonInteractiveUserSignInLogs\r\n    | where TimeGenerated between (ago(14d) .. ago(1h))\r\n    | where ResultType == 0\r\n    | distinct IPAddress;\r\nlet PossibleSuccessfulPasswordSpray = SigninLogs\r\n    | union AADNonInteractiveUserSignInLogs\r\n    | where TimeGenerated \u003e ago(1h) // Rule Frequency\r\n    | join kind=inner PasswordSprayIP on IPAddress\r\n    | extend PasswordStatus = tostring(parse_json(AuthenticationDetails)[0].authenticationStepResultDetail) \r\n    | extend PasswordEnteredCorrectly = tostring(parse_json(AuthenticationDetails)[0].succeeded)\r\n    | where (PasswordStatus == \"Correct password\")\r\n        or (PasswordEnteredCorrectly contains \"true\")\r\n        or (ResultType !in (50126, 50053))\r\n    | project\r\n        PasswordStatus,\r\n        PasswordEnteredCorrectly,\r\n        TimeGenerated,\r\n        UserPrincipalName,\r\n        IPAddress,\r\n        Location,\r\n        AppDisplayName,\r\n        ResultType,\r\n        ResultDescription,\r\n        Status_dynamic,\r\n        Status_string,\r\n        AuthenticationDetails,\r\n        RiskEventTypes,\r\n        RiskEventTypes_V2,\r\n        ClientAppUsed,\r\n        AuthenticationProtocol,\r\n        UserAgent,\r\n        DeviceDetail_dynamic,\r\n        DeviceDetail_string\r\n    | join kind=leftanti FamiliarIP on IPAddress;\r\nPossibleSuccessfulPasswordSpray\r\n// WHITELIST START\r\n| extend RuleName = \u0027Possible Successful Password Spray Attack\u0027\r\n| join kind=leftouter (_GetWatchlist(\u0027WizardCyberAnalyticalRulesTuning\u0027)\r\n) on RuleName\r\n| project-away RuleName,RuleName1\r\n| extend Tuning01 = todynamic(Tuning01)\r\n| where not(  (TicketIDs contains \"3017890\" and isnotempty(Tuning01)) and UserPrincipalName !endswith Tuning01.[0] )\r\n| project-away Tuning*,TicketIDs\r\n// WHITELIST END\r\n",
                                             "queryFrequency":  "PT1H",
                                             "queryPeriod":  "P14D",
                                             "triggerOperator":  "GreaterThan",
                                             "triggerThreshold":  0,
                                             "suppressionDuration":  "PT5H",
                                             "suppressionEnabled":  false,
                                             "startTimeUtc":  null,
                                             "tactics":  [
                                                             "CredentialAccess",
                                                             "InitialAccess"
                                                         ],
                                             "techniques":  [
                                                                "T1110",
                                                                "T1078"
                                                            ],
                                             "subTechniques":  [

                                                               ],
                                             "alertRuleTemplateName":  null,
                                             "incidentConfiguration":  {
                                                                           "createIncident":  true,
                                                                           "groupingConfiguration":  {
                                                                                                         "enabled":  false,
                                                                                                         "reopenClosedIncident":  false,
                                                                                                         "lookbackDuration":  "PT5H",
                                                                                                         "matchingMethod":  "AllEntities",
                                                                                                         "groupByEntities":  [

                                                                                                                             ],
                                                                                                         "groupByAlertDetails":  [

                                                                                                                                 ],
                                                                                                         "groupByCustomDetails":  [

                                                                                                                                  ]
                                                                                                     }
                                                                       },
                                             "eventGroupingSettings":  {
                                                                           "aggregationKind":  "SingleAlert"
                                                                       },
                                             "alertDetailsOverride":  null,
                                             "customDetails":  {
                                                                   "Location":  "Location"
                                                               },
                                             "entityMappings":  [
                                                                    {
                                                                        "entityType":  "Account",
                                                                        "fieldMappings":  [
                                                                                              {
                                                                                                  "identifier":  "Name",
                                                                                                  "columnName":  "UserPrincipalName"
                                                                                              }
                                                                                          ]
                                                                    },
                                                                    {
                                                                        "entityType":  "IP",
                                                                        "fieldMappings":  [
                                                                                              {
                                                                                                  "identifier":  "Address",
                                                                                                  "columnName":  "IPAddress"
                                                                                              }
                                                                                          ]
                                                                    },
                                                                    {
                                                                        "entityType":  "CloudApplication",
                                                                        "fieldMappings":  [
                                                                                              {
                                                                                                  "identifier":  "Name",
                                                                                                  "columnName":  "AppDisplayName"
                                                                                              }
                                                                                          ]
                                                                    },
                                                                    {
                                                                        "entityType":  "Host",
                                                                        "fieldMappings":  [
                                                                                              {
                                                                                                  "identifier":  "FullName",
                                                                                                  "columnName":  "DeviceDetail_dynamic"
                                                                                              }
                                                                                          ]
                                                                    }
                                                                ],
                                             "sentinelEntitiesMappings":  null,
                                             "templateVersion":  null
                                         }
                      }
                  ],
    "parameters":  {
                       "workspace":  {
                                         "type":  "String"
                                     }
                   }
}