{
    "contentVersion":  "1.0.0.0",
    "$schema":  "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
    "resources":  [
                      {
                          "id":  "[concat(resourceId('Microsoft.OperationalInsights/workspaces/providers', parameters('workspace'), 'Microsoft.SecurityInsights'),'/alertRules/38ffba33-0448-429f-b4a6-21f5d65e0802')]",
                          "name":  "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/38ffba33-0448-429f-b4a6-21f5d65e0802')]",
                          "type":  "Microsoft.OperationalInsights/workspaces/providers/alertRules",
                          "kind":  "Scheduled",
                          "apiVersion":  "2023-12-01-preview",
                          "properties":  {
                                             "displayName":  "Brute force attack against a Cloud PC - [WC-BASE-M]",
                                             "description":  "Identifies evidence of brute force activity against a Windows 365 Cloud PC by highlighting multiple authentication failures and by a successful authentication within a given time window.",
                                             "severity":  "Low",
                                             "enabled":  true,
                                             "query":  "let authenticationWindow = 20m;\nlet sensitivity = 2.5;\nlet alerttable =\nSigninLogs\n| where TimeGenerated \u003e ago(1h)\n| where AppDisplayName =~ \"Windows Sign In\"\n| extend FailureOrSuccess = iff(ResultType in (\"0\", \"50125\", \"50140\", \"70043\", \"70044\"), \"Success\", \"Failure\")\n| summarize\n    FailureCount = countif(FailureOrSuccess == \"Failure\"),\n    SuccessCount = countif(FailureOrSuccess == \"Success\"),\n    IPAddresses = make_set(IPAddress, 1000)\n    by bin(TimeGenerated, authenticationWindow), UserDisplayName, UserPrincipalName\n| extend FailureSuccessDiff = FailureCount - SuccessCount\n| where FailureSuccessDiff \u003e 0\n| summarize\n    Diff = make_list(FailureSuccessDiff, 10000),\n    TimeStamp = make_list(TimeGenerated, 10000)\n    by UserDisplayName, UserPrincipalName//, tostring(IPAddresses)\n| extend (Anomalies, Score, Baseline) = series_decompose_anomalies(Diff, sensitivity, -1, 'linefit')  \n| mv-expand\n    Diff to typeof(double),\n    TimeStamp to typeof(datetime),\n    Anomalies to typeof(double),\n    Score to typeof(double),\n    Baseline to typeof(long)\n| where Anomalies \u003e 0\n| summarize by UserDisplayName, UserPrincipalName\n| join kind=leftouter (\n    SigninLogs\n    | where TimeGenerated \u003e ago(1h)\n    | where AppDisplayName =~ \"Windows Sign In\"\n    | extend OS = DeviceDetail.operatingSystem, Browser = DeviceDetail.browser\n    | extend\n        StatusCode = tostring(Status.errorCode),\n        StatusDetails = tostring(Status.additionalDetails)\n    | extend State = tostring(LocationDetails.state), City = tostring(LocationDetails.city)\n    | summarize\n        StartTime = min(TimeGenerated), \n        EndTime = max(TimeGenerated), \n        OS = make_set(OS, 20), \n        Browser = make_set(Browser, 20), \n        City = make_set(City, 100), \n        ResultType = make_set(ResultType, 100)\n        by UserDisplayName, UserPrincipalName, IPAddress\n    )\n    on UserDisplayName, UserPrincipalName\n| extend\n    timestamp = StartTime,\n    Name = tostring(split(UserPrincipalName, '@', 0)[0]),\n    UPNSuffix = tostring(split(UserPrincipalName, '@', 1)[0]);\nlet IPManagedAttempts = SigninLogs\n| union AADNonInteractiveUserSignInLogs\n| where TimeGenerated \u003e ago(14d)\n| where tostring( parse_json(DeviceDetail_dynamic).trustType) != \"\" or tostring( parse_json(DeviceDetail_string).trustType) != \"\"\n| summarize IPManagedAttemptsCount = count() by IPAddress\n| extend IPManagedAttemptsCount = coalesce(IPManagedAttemptsCount,0);\nalerttable\n| join kind=leftouter IPManagedAttempts on IPAddress\n| extend IPManagedAttemptsCount = coalesce(IPManagedAttemptsCount,0)\n| where IPManagedAttemptsCount == 0",
                                             "queryFrequency":  "PT1H",
                                             "queryPeriod":  "P14D",
                                             "triggerOperator":  "GreaterThan",
                                             "triggerThreshold":  0,
                                             "suppressionDuration":  "PT5H",
                                             "suppressionEnabled":  false,
                                             "startTimeUtc":  null,
                                             "tactics":  [
                                                             "CredentialAccess",
                                                             "InitialAccess"
                                                         ],
                                             "techniques":  [
                                                                "T1110",
                                                                "T1078"
                                                            ],
                                             "subTechniques":  [

                                                               ],
                                             "alertRuleTemplateName":  "3fbc20a4-04c4-464e-8fcb-6667f53e4987",
                                             "incidentConfiguration":  {
                                                                           "createIncident":  true,
                                                                           "groupingConfiguration":  {
                                                                                                         "enabled":  true,
                                                                                                         "reopenClosedIncident":  false,
                                                                                                         "lookbackDuration":  "PT5H",
                                                                                                         "matchingMethod":  "AllEntities",
                                                                                                         "groupByEntities":  [

                                                                                                                             ],
                                                                                                         "groupByAlertDetails":  [

                                                                                                                                 ],
                                                                                                         "groupByCustomDetails":  [

                                                                                                                                  ]
                                                                                                     }
                                                                       },
                                             "eventGroupingSettings":  {
                                                                           "aggregationKind":  "SingleAlert"
                                                                       },
                                             "alertDetailsOverride":  null,
                                             "customDetails":  {

                                                               },
                                             "entityMappings":  [
                                                                    {
                                                                        "entityType":  "Account",
                                                                        "fieldMappings":  [
                                                                                              {
                                                                                                  "identifier":  "FullName",
                                                                                                  "columnName":  "UserDisplayName"
                                                                                              }
                                                                                          ]
                                                                    },
                                                                    {
                                                                        "entityType":  "IP",
                                                                        "fieldMappings":  [
                                                                                              {
                                                                                                  "identifier":  "Address",
                                                                                                  "columnName":  "IPAddress"
                                                                                              }
                                                                                          ]
                                                                    }
                                                                ],
                                             "sentinelEntitiesMappings":  null,
                                             "templateVersion":  "1.0.1"
                                         }
                      }
                  ],
    "parameters":  {
                       "workspace":  {
                                         "type":  "String"
                                     }
                   }
}