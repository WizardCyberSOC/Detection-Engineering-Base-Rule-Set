{
    "contentVersion":  "1.0.0.0",
    "$schema":  "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
    "resources":  [
                      {
                          "id":  "[concat(resourceId('Microsoft.OperationalInsights/workspaces/providers', parameters('workspace'), 'Microsoft.SecurityInsights'),'/alertRules/96ae6be0-a9c4-450b-8dc1-90e35ccf0f52')]",
                          "name":  "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/96ae6be0-a9c4-450b-8dc1-90e35ccf0f52')]",
                          "type":  "Microsoft.OperationalInsights/workspaces/providers/alertRules",
                          "kind":  "Scheduled",
                          "apiVersion":  "2023-12-01-preview",
                          "properties":  {
                                             "displayName":  "Multi Factor Authentication (MFA) Prompt Fatigue - [WC-BASE-M]",
                                             "description":  "A user(s) have had multiple MFA requests fail within a 1 hour time period due to the user not completing the MFA prompt. This activity is a known tactic by threat actors to encourage the user to accept the MFA prompts due to repeated attempts made in quick succession.",
                                             "severity":  "Low",
                                             "enabled":  true,
                                             "query":  "let threshold = 5;\r\nlet FailedMFASignins = SigninLogs\r\n    | where TimeGenerated \u003e ago(1h)\r\n    | where ResultType == 500121\r\n    | where UserPrincipalName contains \"@\"\r\n    | project\r\n        TimeGenerated,\r\n        ResultType,\r\n        ResultDescription,\r\n        UserPrincipalName,\r\n        IPAddress,\r\n        AppDisplayName,\r\n        Device = tostring(DeviceDetail.operatingSystem),\r\n        City =  strcat(Location, \"-\", LocationDetails.state) \r\n    | summarize \r\n        MFAFailedCount=count(),\r\n        FailedAppsList = make_set(AppDisplayName),\r\n        FirstTime = min(TimeGenerated)\r\n        by UserPrincipalName,IPAddress,Device,City\r\n        | where MFAFailedCount \u003e threshold;\r\nlet SuccessfulMFASignins = SigninLogs\r\n    | where TimeGenerated \u003e ago(1h)\r\n    | where ResultType != 500121\r\n    | where UserPrincipalName contains \"@\"\r\n    | summarize MFASuccessfulCount = count() by UserPrincipalName,IPAddress;\r\nlet SameIPUsersSignins = SigninLogs\r\n    | where TimeGenerated between (ago(14d) .. ago(1h))\r\n    | where ResultType == 0\r\n    | join kind=inner FailedMFASignins on IPAddress\r\n    | distinct UserPrincipalName, IPAddress\r\n    | where UserPrincipalName contains \"@\"\r\n    | summarize SameIPUsers2DaysCount = dcount(UserPrincipalName) by IPAddress\r\n    | where SameIPUsers2DaysCount \u003e 1;\r\nlet ManagedAttempts = SigninLogs\r\n| union AADNonInteractiveUserSignInLogs\r\n| where TimeGenerated \u003e ago(14d)\r\n| where (tostring( parse_json(DeviceDetail_dynamic).trustType) != \"\") or (tostring( parse_json(DeviceDetail_string).trustType) != \"\") or (DeviceDetail_dynamic contains \"PII Removed\") or (DeviceDetail_string contains \"PII Removed\")\r\n| distinct IPAddress;\r\nlet FamiliarProperties = SigninLogs\r\n| where TimeGenerated between (ago(14d) .. ago(1h))\r\n| where ResultType == 0\r\n| extend FamiliarDevice = tostring(DeviceDetail.operatingSystem), FamiliarCity = strcat(Location, \"-\", LocationDetails.state),\r\nFamiliarIPSubnet = iff(\r\n    indexof(IPAddress, \":\") != -1,  // If colon exists, it's IPv6\r\n    trim(\" \", substring(IPAddress, 0, indexof(IPAddress, \":\", indexof(IPAddress, \":\") + 1))),\r\n    trim(\" \", substring(IPAddress, 0, indexof(IPAddress, \".\", indexof(IPAddress, \".\") + 1)))\r\n)\r\n| summarize FamiliarDevices = make_set(FamiliarDevice),FamiliarCities = make_set(FamiliarCity), FamiliarIPSubnets = make_set(FamiliarIPSubnet) by UserPrincipalName;\r\nFailedMFASignins\r\n| join kind=inner (SuccessfulMFASignins) on UserPrincipalName,IPAddress\r\n| join kind=leftanti  ManagedAttempts on IPAddress\r\n| join kind=leftanti SameIPUsersSignins on IPAddress\r\n| join kind=leftouter FamiliarProperties on UserPrincipalName\r\n| extend IPSubnet = iff(\r\n    indexof(IPAddress, \":\") != -1,  // If colon exists, it's IPv6\r\n    trim(\" \", substring(IPAddress, 0, indexof(IPAddress, \":\", indexof(IPAddress, \":\") + 1))),\r\n    trim(\" \", substring(IPAddress, 0, indexof(IPAddress, \".\", indexof(IPAddress, \".\") + 1)))\r\n)\r\n| project\r\n    FirstTime,\r\n    UserPrincipalName,\r\n    IPAddress,\r\n    IPSubnet,\r\n    Device,\r\n    City,\r\n    MFAFailedCount,\r\n    MFASuccessfulCount,\r\n    FailedAppsList,\r\n    FamiliarCities,\r\n    FamiliarDevices,\r\n    FamiliarIPSubnets\r\n| where not( (FamiliarDevices has Device) and (FamiliarIPSubnets has IPSubnet) and (FamiliarCities has City))",
                                             "queryFrequency":  "PT1H",
                                             "queryPeriod":  "P14D",
                                             "triggerOperator":  "GreaterThan",
                                             "triggerThreshold":  0,
                                             "suppressionDuration":  "PT5H",
                                             "suppressionEnabled":  false,
                                             "startTimeUtc":  null,
                                             "tactics":  [
                                                             "CredentialAccess",
                                                             "InitialAccess"
                                                         ],
                                             "techniques":  [
                                                                "T1110",
                                                                "T1078",
                                                                "T1621"
                                                            ],
                                             "subTechniques":  [

                                                               ],
                                             "alertRuleTemplateName":  null,
                                             "incidentConfiguration":  {
                                                                           "createIncident":  true,
                                                                           "groupingConfiguration":  {
                                                                                                         "enabled":  true,
                                                                                                         "reopenClosedIncident":  false,
                                                                                                         "lookbackDuration":  "PT5H",
                                                                                                         "matchingMethod":  "AllEntities",
                                                                                                         "groupByEntities":  [

                                                                                                                             ],
                                                                                                         "groupByAlertDetails":  [

                                                                                                                                 ],
                                                                                                         "groupByCustomDetails":  [

                                                                                                                                  ]
                                                                                                     }
                                                                       },
                                             "eventGroupingSettings":  {
                                                                           "aggregationKind":  "SingleAlert"
                                                                       },
                                             "alertDetailsOverride":  null,
                                             "customDetails":  null,
                                             "entityMappings":  [
                                                                    {
                                                                        "entityType":  "Account",
                                                                        "fieldMappings":  [
                                                                                              {
                                                                                                  "identifier":  "FullName",
                                                                                                  "columnName":  "UserPrincipalName"
                                                                                              }
                                                                                          ]
                                                                    },
                                                                    {
                                                                        "entityType":  "IP",
                                                                        "fieldMappings":  [
                                                                                              {
                                                                                                  "identifier":  "Address",
                                                                                                  "columnName":  "IPAddress"
                                                                                              }
                                                                                          ]
                                                                    },
                                                                    {
                                                                        "entityType":  "Host",
                                                                        "fieldMappings":  [
                                                                                              {
                                                                                                  "identifier":  "HostName",
                                                                                                  "columnName":  "Device"
                                                                                              }
                                                                                          ]
                                                                    },
                                                                    {
                                                                        "entityType":  "Account",
                                                                        "fieldMappings":  [
                                                                                              {
                                                                                                  "identifier":  "Name",
                                                                                                  "columnName":  "City"
                                                                                              }
                                                                                          ]
                                                                    }
                                                                ],
                                             "sentinelEntitiesMappings":  null,
                                             "templateVersion":  null
                                         }
                      }
                  ],
    "parameters":  {
                       "workspace":  {
                                         "type":  "String"
                                     }
                   }
}