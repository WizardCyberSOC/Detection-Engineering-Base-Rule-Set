{
    "contentVersion":  "1.0.0.0",
    "$schema":  "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
    "resources":  [
                      {
                          "id":  "[concat(resourceId(\u0027Microsoft.OperationalInsights/workspaces/providers\u0027, parameters(\u0027workspace\u0027), \u0027Microsoft.SecurityInsights\u0027),\u0027/alertRules/5cbf6bf0-63af-43f1-8720-ddc3a9ed0e53\u0027)]",
                          "name":  "[concat(parameters(\u0027workspace\u0027),\u0027/Microsoft.SecurityInsights/5cbf6bf0-63af-43f1-8720-ddc3a9ed0e53\u0027)]",
                          "type":  "Microsoft.OperationalInsights/workspaces/providers/alertRules",
                          "kind":  "Scheduled",
                          "apiVersion":  "2023-12-01-preview",
                          "properties":  {
                                             "displayName":  "Unusual high volume of emails in 10 minutes from single sender - [WC-BASE-W]",
                                             "description":  "Detects a sender generating an unusually high volume of inbound emails (more than 500) within a 10-minute window. This may indicate spam, phishing campaigns, or email abuse attempts from compromised or misconfigured systems.",
                                             "severity":  "Low",
                                             "enabled":  true,
                                             "query":  "let TimeWindow = 10m;\r\nlet Threshold = 500;\r\nlet AllowedSenders = EmailEvents\r\n    | where TimeGenerated \u003e ago(TimeWindow)\r\n    | where UserLevelAction == \"Allow\" or OrgLevelAction == \"Allow\"\r\n    | distinct SenderFromAddress;\r\nlet HighVolumeUser = \r\n    EmailEvents\r\n    | where TimeGenerated \u003e= ago(TimeWindow)\r\n    | where EmailDirection == \"Inbound\"\r\n    | summarize EmailCount = count() by SenderFromAddress\r\n    | where EmailCount \u003e Threshold\r\n    | project SenderFromAddress, EmailCount\r\n    | order by EmailCount desc;\r\nEmailEvents\r\n| where TimeGenerated \u003e= ago(TimeWindow)\r\n| where EmailDirection == \"Inbound\"\r\n| join kind=inner HighVolumeUser on SenderFromAddress\r\n| join kind=leftanti AllowedSenders on SenderFromAddress\r\n// WHITELIST START\r\n| extend RuleName = \u0027Unusual high volume of emails in 10 minutes from single sender\u0027\r\n| join kind=leftouter (_GetWatchlist(\u0027WizardCyberAnalyticalRulesTuning\u0027)\r\n) on RuleName\r\n| project-away RuleName,RuleName1\r\n| extend Tuning01 = todynamic(Tuning01)\r\n| where not(  (TicketIDs contains \"3017815\" and isnotempty(Tuning01)) and SenderFromAddress == Tuning01.[0] )\r\n| where not(  (TicketIDs contains \"3017876\" and isnotempty(Tuning01)) and SenderFromAddress == Tuning01.[0] )\r\n| where not(  (TicketIDs contains \"3017919\" and isnotempty(Tuning01)) and Tuning01 has SenderFromAddress)\r\n| where not(  (TicketIDs contains \"3018025\" and isnotempty(Tuning01)) and SenderFromAddress == Tuning01.[0])\r\n| project-away Tuning*,TicketIDs\r\n// WHITELIST END\r\n",
                                             "queryFrequency":  "PT10M",
                                             "queryPeriod":  "PT10M",
                                             "triggerOperator":  "GreaterThan",
                                             "triggerThreshold":  0,
                                             "suppressionDuration":  "PT5H",
                                             "suppressionEnabled":  false,
                                             "startTimeUtc":  null,
                                             "tactics":  [
                                                             "Reconnaissance"
                                                         ],
                                             "techniques":  [
                                                                "T1598"
                                                            ],
                                             "subTechniques":  [

                                                               ],
                                             "alertRuleTemplateName":  null,
                                             "incidentConfiguration":  {
                                                                           "createIncident":  true,
                                                                           "groupingConfiguration":  {
                                                                                                         "enabled":  false,
                                                                                                         "reopenClosedIncident":  false,
                                                                                                         "lookbackDuration":  "PT5H",
                                                                                                         "matchingMethod":  "AllEntities",
                                                                                                         "groupByEntities":  [

                                                                                                                             ],
                                                                                                         "groupByAlertDetails":  [

                                                                                                                                 ],
                                                                                                         "groupByCustomDetails":  [

                                                                                                                                  ]
                                                                                                     }
                                                                       },
                                             "eventGroupingSettings":  {
                                                                           "aggregationKind":  "SingleAlert"
                                                                       },
                                             "alertDetailsOverride":  {
                                                                          "alertDynamicProperties":  [

                                                                                                     ]
                                                                      },
                                             "customDetails":  {

                                                               },
                                             "entityMappings":  [
                                                                    {
                                                                        "entityType":  "Process",
                                                                        "fieldMappings":  [
                                                                                              {
                                                                                                  "identifier":  "CommandLine",
                                                                                                  "columnName":  "EmailCount"
                                                                                              }
                                                                                          ]
                                                                    },
                                                                    {
                                                                        "entityType":  "Account",
                                                                        "fieldMappings":  [
                                                                                              {
                                                                                                  "identifier":  "Name",
                                                                                                  "columnName":  "SenderFromAddress"
                                                                                              }
                                                                                          ]
                                                                    }
                                                                ],
                                             "sentinelEntitiesMappings":  [
                                                                              {
                                                                                  "columnName":  "SenderFromAddress"
                                                                              }
                                                                          ],
                                             "templateVersion":  null
                                         }
                      }
                  ],
    "parameters":  {
                       "workspace":  {
                                         "type":  "String"
                                     }
                   }
}