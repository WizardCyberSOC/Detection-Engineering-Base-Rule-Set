{
    "contentVersion":  "1.0.0.0",
    "$schema":  "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
    "resources":  [
                      {
                          "id":  "[concat(resourceId(\u0027Microsoft.OperationalInsights/workspaces/providers\u0027, parameters(\u0027workspace\u0027), \u0027Microsoft.SecurityInsights\u0027),\u0027/alertRules/0cf2de0d-f904-4240-a774-066bc4954a6d\u0027)]",
                          "name":  "[concat(parameters(\u0027workspace\u0027),\u0027/Microsoft.SecurityInsights/0cf2de0d-f904-4240-a774-066bc4954a6d\u0027)]",
                          "type":  "Microsoft.OperationalInsights/workspaces/providers/alertRules",
                          "kind":  "Scheduled",
                          "apiVersion":  "2023-12-01-preview",
                          "properties":  {
                                             "displayName":  "Powershell Empire cmdlets seen in command line - [WC-BASE-W]",
                                             "description":  "Identifies instances of PowerShell Empire cmdlets in powershell process command line data.",
                                             "severity":  "Medium",
                                             "enabled":  true,
                                             "query":  "let regexEmpire = tostring(toscalar(externaldata(cmdlets: string)[@\"https://raw.githubusercontent.com/Azure/Azure-Sentinel/master/Sample%20Data/Feeds/EmpireCommandString.txt\"] with (format=\"txt\")));\n(union isfuzzy=false\n    (SecurityEvent\n    | where EventID == 4688\n    | where not(ParentProcessName has_any (\u0027gc_worker.exe\u0027, \u0027gc_service.exe\u0027))\n    | where CommandLine has \"-encodedCommand\"\n    | parse kind=regex flags=i CommandLine with * \"-EncodedCommand \" encodedCommand\n    | extend encodedCommand = iff(encodedCommand has \" \", tostring(split(encodedCommand, \" \")[0]), encodedCommand)\n    | extend\n        decodedCommand = translate(\u0027\\0\u0027, \u0027\u0027, base64_decode_tostring(substring(encodedCommand, 0, strlen(encodedCommand) - (strlen(encodedCommand) % 8)))),\n        encodedCommand,\n        CommandLine,\n        strlen(encodedCommand)\n    | extend EfectiveCommand = iff(isnotempty(encodedCommand), decodedCommand, CommandLine)\n    | where EfectiveCommand matches regex regexEmpire\n    | project\n        timestamp = TimeGenerated,\n        Computer,\n        SubjectUserName,\n        SubjectDomainName,\n        FileName = Process,\n        EfectiveCommand,\n        decodedCommand,\n        encodedCommand,\n        CommandLine,\n        ParentProcessName\n    | extend\n        HostName = split(Computer, \u0027.\u0027, 0)[0],\n        DnsDomain = strcat_array(array_slice(split(Computer, \u0027.\u0027), 1, -1), \u0027.\u0027)\n    | extend Source = \"Windows Security Events\"\n    ),\n    (WindowsEvent\n    | where EventID == 4688\n    | where EventData has_any (\"-encodedCommand\", \"powershell.exe\", \"powershell_ise.exe\", \"pwsh.exe\")\n    | where not(EventData has_any (\u0027gc_worker.exe\u0027, \u0027gc_service.exe\u0027))\n    | extend ParentProcessName = tostring(EventData.ParentProcessName)\n    | where not(ParentProcessName has_any (\u0027gc_worker.exe\u0027, \u0027gc_service.exe\u0027))\n    | extend CommandLine = tostring(EventData.CommandLine)\n    | where CommandLine has \"-encodedCommand\"\n    | parse kind=regex flags=i CommandLine with * \"-EncodedCommand \" encodedCommand\n    | extend encodedCommand = iff(encodedCommand has \" \", tostring(split(encodedCommand, \" \")[0]), encodedCommand)\n    | extend\n        decodedCommand = translate(\u0027\\0\u0027, \u0027\u0027, base64_decode_tostring(substring(encodedCommand, 0, strlen(encodedCommand) - (strlen(encodedCommand) % 8)))),\n        encodedCommand,\n        CommandLine,\n        strlen(encodedCommand)\n    | extend EfectiveCommand = iff(isnotempty(encodedCommand), decodedCommand, CommandLine)\n    | where EfectiveCommand matches regex regexEmpire\n    | extend SubjectUserName = tostring(EventData.SubjectUserName)\n    | extend SubjectDomainName = tostring(EventData.SubjectDomainName)\n    | extend NewProcessName = tostring(EventData.NewProcessName)\n    | extend Process=tostring(split(NewProcessName, \u0027\\\\\u0027)[-1])\n    | project\n        timestamp = TimeGenerated,\n        Computer,\n        SubjectUserName,\n        SubjectDomainName,\n        FileName = Process,\n        EfectiveCommand,\n        decodedCommand,\n        encodedCommand,\n        CommandLine,\n        ParentProcessName\n    | extend\n        HostName = split(Computer, \u0027.\u0027, 0)[0],\n        DnsDomain = strcat_array(array_slice(split(Computer, \u0027.\u0027), 1, -1), \u0027.\u0027)\n    | extend Source = \"Windows Events\"\n    ),\n    (\n    DeviceProcessEvents\n    | extend EncodedString = extract(@\"(?i)-enc(?:oded(?:command)?)?\\s+([A-Za-z0-9+/=]+)\", 1, ProcessCommandLine)\n    | extend DecodedCommand = base64_decode_tostring(EncodedString)\n    | where (ProcessCommandLine matches regex regexEmpire) or (DecodedCommand matches regex regexEmpire)\n    | where InitiatingProcessFileName !contains \"cybercnsagent\" // vulnerability scanning tool that\u0027s expected to use\n    | extend Source = \"Device Process Events\"\n    ))\n// WHITELIST START\n| extend RuleName = \u0027Powershell Empire cmdlets seen in command line\u0027\n| join kind=leftouter (_GetWatchlist(\u0027WizardCyberAnalyticalRulesTuning\u0027)\n) on RuleName\n| project-away RuleName,RuleName1\n| extend Tuning01 = todynamic(Tuning01)\n| where not(  (TicketIDs contains \"3017875\" and isnotempty(Tuning01)) and ProcessCommandLine contains Tuning01.[0] )\n| project-away Tuning*,TicketIDs\n// WHITELIST END\n",
                                             "queryFrequency":  "PT1H",
                                             "queryPeriod":  "PT1H",
                                             "triggerOperator":  "GreaterThan",
                                             "triggerThreshold":  0,
                                             "suppressionDuration":  "PT5H",
                                             "suppressionEnabled":  false,
                                             "startTimeUtc":  null,
                                             "tactics":  [
                                                             "DefenseEvasion",
                                                             "PrivilegeEscalation",
                                                             "Discovery",
                                                             "CredentialAccess",
                                                             "Collection",
                                                             "CommandAndControl",
                                                             "Persistence",
                                                             "Execution",
                                                             "Exfiltration",
                                                             "LateralMovement"
                                                         ],
                                             "techniques":  [
                                                                "T1548",
                                                                "T1134",
                                                                "T1087",
                                                                "T1557",
                                                                "T1071",
                                                                "T1560",
                                                                "T1547",
                                                                "T1217",
                                                                "T1115",
                                                                "T1059",
                                                                "T1136",
                                                                "T1543",
                                                                "T1555",
                                                                "T1484",
                                                                "T1482",
                                                                "T1114",
                                                                "T1573",
                                                                "T1546",
                                                                "T1041",
                                                                "T1567",
                                                                "T1068",
                                                                "T1210",
                                                                "T1083",
                                                                "T1615",
                                                                "T1574",
                                                                "T1070",
                                                                "T1105",
                                                                "T1056",
                                                                "T1106",
                                                                "T1046",
                                                                "T1135",
                                                                "T1040",
                                                                "T1027",
                                                                "T1003",
                                                                "T1057",
                                                                "T1055",
                                                                "T1021",
                                                                "T1053",
                                                                "T1113",
                                                                "T1518",
                                                                "T1082",
                                                                "T1016",
                                                                "T1049",
                                                                "T1569",
                                                                "T1127",
                                                                "T1552",
                                                                "T1550",
                                                                "T1125",
                                                                "T1102",
                                                                "T1047"
                                                            ],
                                             "subTechniques":  [

                                                               ],
                                             "alertRuleTemplateName":  "ef88eb96-861c-43a0-ab16-f3835a97c928",
                                             "incidentConfiguration":  {
                                                                           "createIncident":  true,
                                                                           "groupingConfiguration":  {
                                                                                                         "enabled":  false,
                                                                                                         "reopenClosedIncident":  false,
                                                                                                         "lookbackDuration":  "PT5H",
                                                                                                         "matchingMethod":  "AllEntities",
                                                                                                         "groupByEntities":  [

                                                                                                                             ],
                                                                                                         "groupByAlertDetails":  [

                                                                                                                                 ],
                                                                                                         "groupByCustomDetails":  [

                                                                                                                                  ]
                                                                                                     }
                                                                       },
                                             "eventGroupingSettings":  {
                                                                           "aggregationKind":  "SingleAlert"
                                                                       },
                                             "alertDetailsOverride":  {
                                                                          "alertDynamicProperties":  [

                                                                                                     ]
                                                                      },
                                             "customDetails":  {
                                                                   "Source":  "Source"
                                                               },
                                             "entityMappings":  [
                                                                    {
                                                                        "entityType":  "Host",
                                                                        "fieldMappings":  [
                                                                                              {
                                                                                                  "identifier":  "FullName",
                                                                                                  "columnName":  "DeviceName"
                                                                                              }
                                                                                          ]
                                                                    },
                                                                    {
                                                                        "entityType":  "Account",
                                                                        "fieldMappings":  [
                                                                                              {
                                                                                                  "identifier":  "FullName",
                                                                                                  "columnName":  "AccountName"
                                                                                              }
                                                                                          ]
                                                                    },
                                                                    {
                                                                        "entityType":  "Process",
                                                                        "fieldMappings":  [
                                                                                              {
                                                                                                  "identifier":  "CommandLine",
                                                                                                  "columnName":  "DecodedCommand"
                                                                                              }
                                                                                          ]
                                                                    }
                                                                ],
                                             "sentinelEntitiesMappings":  null,
                                             "templateVersion":  "1.1.1"
                                         }
                      }
                  ],
    "parameters":  {
                       "workspace":  {
                                         "type":  "String"
                                     }
                   }
}