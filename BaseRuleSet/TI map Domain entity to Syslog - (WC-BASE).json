{
    "contentVersion":  "1.0.0.0",
    "$schema":  "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
    "resources":  [
                      {
                          "id":  "[concat(resourceId('Microsoft.OperationalInsights/workspaces/providers', parameters('workspace'), 'Microsoft.SecurityInsights'),'/alertRules/83694ac9-96c9-45e6-8e15-382b4ed3c2c7')]",
                          "name":  "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/83694ac9-96c9-45e6-8e15-382b4ed3c2c7')]",
                          "type":  "Microsoft.OperationalInsights/workspaces/providers/alertRules",
                          "kind":  "Scheduled",
                          "apiVersion":  "2023-12-01-preview",
                          "properties":  {
                                             "displayName":  "TI map Domain entity to Syslog - [WC-BASE]",
                                             "description":  "Detects matches between threat intelligence domain indicators and domain patterns extracted from Syslog messages, potentially revealing communication with known malicious domains.",
                                             "severity":  "Medium",
                                             "enabled":  true,
                                             "query":  "let dt_lookBack = 1h;  // Define the time range to look back for syslog data (1 hour)\nlet ioc_lookBack = 14d;  // Define the time range to look back for threat intelligence indicators (14 days)\n// Create a list of top-level domains (TLDs) from the threat feed for later validation\nlet list_tlds = ThreatIntelIndicators\n| where TimeGenerated \u003e ago(ioc_lookBack)\n| where isnotempty(ObservableValue)\n| where ObservableKey == \"domain-name:value\"\n| extend parts = split(ObservableValue, '.')\n| extend tld = parts[(array_length(parts)-1)]\n| summarize count() by tostring(tld)\n| summarize make_list(tld);\n// Fetch the latest active domain indicators from the threat intelligence data within the specified time range\nlet Domain_Indicators = ThreatIntelIndicators\n| where TimeGenerated \u003e ago(14d)\n| distinct TIEntity = ObservableValue\n| where isnotempty( TIEntity);\n// Join the threat intelligence indicators with syslog data on matching domain entities\nDomain_Indicators\n| join kind=innerunique (\n    Syslog\n    | where TimeGenerated \u003e ago(dt_lookBack)\n    // Extract domain patterns from syslog messages\n    | extend domain = extract(\"(([a-z0-9]+(-[a-z0-9]+)*\\\\.)+[a-z]{2,})\", 1, tolower(SyslogMessage))\n    | where isnotempty(domain)\n    | extend parts = split(domain, '.')\n    // Split out the top-level domain (TLD)\n    | extend tld = parts[(array_length(parts) - 1)]\n    // Validate parsed domain by checking if the TLD is in the list of TLDs in our threat feed\n    | where tld in~ (list_tlds)\n    | extend Syslog_TimeGenerated = TimeGenerated\n    )\n    on $left.TIEntity == $right.domain\n// Retrieve the latest syslog timestamp for each indicator and domain combination\n| summarize Syslog_TimeGenerated = arg_max(Syslog_TimeGenerated, *) by domain\n// Select the desired columns for the final result set\n| project\n    Syslog_TimeGenerated,\n    SyslogMessage,\n    Computer,\n    ProcessName,\n    domain,\n    HostIP,\n    Type,\n    TIEntity\n// Extract the hostname from the Computer field\n| extend HostName = tostring(split(Computer, '.', 0)[0])\n// Extract the DNS domain from the Computer field\n| extend DnsDomain = tostring(strcat_array(array_slice(split(Computer, '.'), 1, -1), '.'))\n// Assign the Syslog_TimeGenerated value to the timestamp field\n| extend timestamp = Syslog_TimeGenerated\n",
                                             "queryFrequency":  "PT1H",
                                             "queryPeriod":  "P14D",
                                             "triggerOperator":  "GreaterThan",
                                             "triggerThreshold":  0,
                                             "suppressionDuration":  "PT5H",
                                             "suppressionEnabled":  false,
                                             "startTimeUtc":  null,
                                             "tactics":  [
                                                             "CommandAndControl"
                                                         ],
                                             "techniques":  [
                                                                "T1071"
                                                            ],
                                             "subTechniques":  [

                                                               ],
                                             "alertRuleTemplateName":  "532f62c1-fba6-4baa-bbb6-4a32a4ef32fa",
                                             "incidentConfiguration":  {
                                                                           "createIncident":  true,
                                                                           "groupingConfiguration":  {
                                                                                                         "enabled":  false,
                                                                                                         "reopenClosedIncident":  false,
                                                                                                         "lookbackDuration":  "P1D",
                                                                                                         "matchingMethod":  "AllEntities",
                                                                                                         "groupByEntities":  [

                                                                                                                             ],
                                                                                                         "groupByAlertDetails":  [

                                                                                                                                 ],
                                                                                                         "groupByCustomDetails":  [

                                                                                                                                  ]
                                                                                                     }
                                                                       },
                                             "eventGroupingSettings":  {
                                                                           "aggregationKind":  "SingleAlert"
                                                                       },
                                             "alertDetailsOverride":  null,
                                             "customDetails":  null,
                                             "entityMappings":  [
                                                                    {
                                                                        "entityType":  "Host",
                                                                        "fieldMappings":  [
                                                                                              {
                                                                                                  "identifier":  "FullName",
                                                                                                  "columnName":  "Computer"
                                                                                              },
                                                                                              {
                                                                                                  "identifier":  "HostName",
                                                                                                  "columnName":  "HostName"
                                                                                              },
                                                                                              {
                                                                                                  "identifier":  "DnsDomain",
                                                                                                  "columnName":  "DnsDomain"
                                                                                              }
                                                                                          ]
                                                                    },
                                                                    {
                                                                        "entityType":  "IP",
                                                                        "fieldMappings":  [
                                                                                              {
                                                                                                  "identifier":  "Address",
                                                                                                  "columnName":  "HostIP"
                                                                                              }
                                                                                          ]
                                                                    }
                                                                ],
                                             "sentinelEntitiesMappings":  null,
                                             "templateVersion":  "1.4.3"
                                         }
                      }
                  ],
    "parameters":  {
                       "workspace":  {
                                         "type":  "String"
                                     }
                   }
}