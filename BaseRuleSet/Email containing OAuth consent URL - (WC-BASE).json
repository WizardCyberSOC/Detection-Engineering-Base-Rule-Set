{
    "contentVersion":  "1.0.0.0",
    "$schema":  "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
    "resources":  [
                      {
                          "id":  "[concat(resourceId('Microsoft.OperationalInsights/workspaces/providers', parameters('workspace'), 'Microsoft.SecurityInsights'),'/alertRules/1206d648-0276-42c2-a818-984bfbce1365')]",
                          "name":  "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/1206d648-0276-42c2-a818-984bfbce1365')]",
                          "type":  "Microsoft.OperationalInsights/workspaces/providers/alertRules",
                          "kind":  "Scheduled",
                          "apiVersion":  "2023-12-01-preview",
                          "properties":  {
                                             "displayName":  "Email containing OAuth consent URL - [WC-BASE]",
                                             "description":  "This query detects when a user received an email containing an OAuth consent URL and if they the user has consented to it.",
                                             "severity":  "High",
                                             "enabled":  true,
                                             "query":  "let maxApps = 100;  \r\nlet maxUsers = 100;  \r\nlet maxNmids = 100;  \r\nlet relevantUrlEvents = materialize(EmailUrlInfo   \r\n| where Url startswith \"https://login.windows.net/common/oauth2\" or Url startswith \"https://login.microsoftonline.com/consumers/oauth2\" or Url startswith \"https://login.microsoftonline.com/common/oauth2\"  \r\n| where Url has \"redirect_uri\"   \r\n| where Url has \"client_id\"  \r\n| extend AppId = tostring(parse_url(Url)[\"Query Parameters\"][\"client_id\"])  \r\n| where isnotempty(AppId)  \r\n| project EmailReceivedTime = Timestamp, ReportId, AppId, NetworkMessageId  \r\n);  \r\n//  \r\nlet affectedNmids = materialize(  \r\nrelevantUrlEvents  \r\n| distinct NetworkMessageId  \r\n| take maxNmids  \r\n);  \r\n//  \r\nlet hasAffectedNmids = isnotempty(toscalar(affectedNmids));  \r\n//  \r\nlet relevantEmailEvents =   \r\nEmailEvents  \r\n| where hasAffectedNmids  \r\n| where NetworkMessageId in (affectedNmids)  \r\n| where isnotempty(RecipientObjectId)  \r\n| where isnotempty(RecipientEmailAddress)  \r\n| distinct RecipientObjectId, NetworkMessageId, RecipientEmailAddress  \r\n| project-rename AccountObjectId = RecipientObjectId;  \r\n//  \r\nlet affectedUsers = materialize(  \r\nrelevantEmailEvents  \r\n| distinct AccountObjectId  \r\n| take maxUsers  \r\n);  \r\n//  \r\nlet hasAffectedUsers = isnotempty(toscalar(affectedUsers));  \r\n//  \r\nlet appIds = materialize(  \r\nrelevantUrlEvents  \r\n| distinct AppId  \r\n| take maxApps  \r\n);  \r\n//  \r\nlet hasAppId = isnotempty(toscalar(appIds));  \r\n//  \r\nlet relevantCloudAppEvents =   \r\nCloudAppEvents  \r\n| where hasAppId  \r\n| where hasAffectedUsers  \r\n| where AccountObjectId in (affectedUsers)  \r\n| where ActionType == \"Consent to application.\"  \r\n| where RawEventData has_any(appIds)  \r\n| extend AppId = tostring(RawEventData.Target[4].ID)  \r\n| where isnotempty(AppId)  \r\n| where AppId in (appIds)  \r\n| project ConsentTime=Timestamp, AppId, AppName = ObjectName, AccountObjectId;  \r\n//  \r\nlet finalEmailEvents = materialize(  \r\nrelevantEmailEvents  \r\n| join kind=inner relevantUrlEvents on NetworkMessageId  \r\n| project EmailReceivedTime, ReportId, AccountObjectId, RecipientEmailAddress, AppId, NetworkMessageId  \r\n);  \r\n//  \r\nrelevantCloudAppEvents  \r\n| join kind=inner finalEmailEvents on AppId, AccountObjectId  \r\n| where EmailReceivedTime \u003c ConsentTime  \r\n| project Timestamp=EmailReceivedTime, ReportId, AccountObjectId, RecipientEmailAddress, AppId, AppName, NetworkMessageId",
                                             "queryFrequency":  "PT15M",
                                             "queryPeriod":  "PT15M",
                                             "triggerOperator":  "GreaterThan",
                                             "triggerThreshold":  0,
                                             "suppressionDuration":  "PT5H",
                                             "suppressionEnabled":  false,
                                             "startTimeUtc":  null,
                                             "tactics":  [
                                                             "InitialAccess"
                                                         ],
                                             "techniques":  [
                                                                "T1078"
                                                            ],
                                             "subTechniques":  [

                                                               ],
                                             "alertRuleTemplateName":  null,
                                             "incidentConfiguration":  {
                                                                           "createIncident":  true,
                                                                           "groupingConfiguration":  {
                                                                                                         "enabled":  false,
                                                                                                         "reopenClosedIncident":  false,
                                                                                                         "lookbackDuration":  "PT5H",
                                                                                                         "matchingMethod":  "AllEntities",
                                                                                                         "groupByEntities":  [

                                                                                                                             ],
                                                                                                         "groupByAlertDetails":  [

                                                                                                                                 ],
                                                                                                         "groupByCustomDetails":  [

                                                                                                                                  ]
                                                                                                     }
                                                                       },
                                             "eventGroupingSettings":  {
                                                                           "aggregationKind":  "SingleAlert"
                                                                       },
                                             "alertDetailsOverride":  null,
                                             "customDetails":  {
                                                                   "AppName":  "AppName",
                                                                   "RecpEmailAddress":  "RecipientEmailAddress"
                                                               },
                                             "entityMappings":  [
                                                                    {
                                                                        "entityType":  "MailMessage",
                                                                        "fieldMappings":  [
                                                                                              {
                                                                                                  "identifier":  "NetworkMessageId",
                                                                                                  "columnName":  "NetworkMessageId"
                                                                                              }
                                                                                          ]
                                                                    }
                                                                ],
                                             "sentinelEntitiesMappings":  null,
                                             "templateVersion":  null
                                         }
                      }
                  ],
    "parameters":  {
                       "workspace":  {
                                         "type":  "String"
                                     }
                   }
}