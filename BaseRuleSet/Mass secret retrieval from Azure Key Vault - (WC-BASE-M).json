{
    "contentVersion":  "1.0.0.0",
    "$schema":  "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
    "resources":  [
                      {
                          "id":  "[concat(resourceId('Microsoft.OperationalInsights/workspaces/providers', parameters('workspace'), 'Microsoft.SecurityInsights'),'/alertRules/f7859f9f-527c-44d9-87ea-6f44771be97c')]",
                          "name":  "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/f7859f9f-527c-44d9-87ea-6f44771be97c')]",
                          "type":  "Microsoft.OperationalInsights/workspaces/providers/alertRules",
                          "kind":  "Scheduled",
                          "apiVersion":  "2023-12-01-preview",
                          "properties":  {
                                             "displayName":  "Mass secret retrieval from Azure Key Vault - [WC-BASE-M]",
                                             "description":  "Identifies mass secret retrieval from Azure Key Vault observed by a single user. \nMass secret retrival crossing a certain threshold is an indication of credential dump operations or mis-configured applications. \nYou can tweak the EventCountThreshold based on average count seen in your environment \nand also filter any known sources (IP/Account) and useragent combinations based on historical analysis to further reduce noise",
                                             "severity":  "Medium",
                                             "enabled":  true,
                                             "query":  "let MSIPs = _GetWatchlist(\"MSPublicIPsV2\")\n    | project Subnet = SearchKey, FirstOctet = toint(split(SearchKey, \".\")[0]);\nlet ManagedAttempts = \n    SigninLogs\n    | union AADNonInteractiveUserSignInLogs\n    | where TimeGenerated \u003e ago(14d)\n    | where (tostring(parse_json(DeviceDetail_dynamic).trustType) != \"\" or tostring(parse_json(DeviceDetail_string).trustType) != \"\") or (DeviceDetail_dynamic or DeviceDetail_string contains \"PII Removed\")\n    | distinct IPAddress;\nlet timeframe =1h;\nlet EventCountThreshold = 25;\nlet OperationList = dynamic(\n    [\"SecretGet\", \"KeyGet\", \"VaultGet\"]);\nlet alerttable = \n    AzureDiagnostics\n    | where TimeGenerated \u003e ago(timeframe)\n    | extend\n        ResultType = columnifexists(\"ResultType\", \"None\"),\n        identity_claim_http_schemas_microsoft_com_identity_claims_objectidentifier_g = columnifexists(\"identity_claim_http_schemas_microsoft_com_identity_claims_objectidentifier_g\", \"None\")\n    | where ResultType !~ \"None\" and isnotempty(ResultType)\n    | where identity_claim_http_schemas_microsoft_com_identity_claims_objectidentifier_g !~ \"None\" and isnotempty(identity_claim_http_schemas_microsoft_com_identity_claims_objectidentifier_g)\n    | where ResourceType =~ \"VAULTS\" and ResultType =~ \"Success\"\n    | where OperationName in (OperationList) \n    | summarize count()\n        by\n        identity_claim_http_schemas_microsoft_com_identity_claims_objectidentifier_g,\n        OperationName\n    | where count_ \u003e EventCountThreshold  \n    | join (\n        AzureDiagnostics\n        | where TimeGenerated \u003e ago(timeframe)\n        | extend ResultType = columnifexists(\"ResultType\", \"NoResultType\")\n        | extend\n            requestUri_s = columnifexists(\"requestUri_s\", \"None\"),\n            identity_claim_http_schemas_microsoft_com_identity_claims_objectidentifier_g = columnifexists(\"identity_claim_http_schemas_microsoft_com_identity_claims_objectidentifier_g\", \"None\")\n        | extend\n            id_s = columnifexists(\"id_s\", \"None\"),\n            CallerIPAddress = columnifexists(\"CallerIPAddress\", \"None\"),\n            clientInfo_s = columnifexists(\"clientInfo_s\", \"None\")\n        | where ResultType !~ \"None\" and isnotempty(ResultType)\n        | where identity_claim_http_schemas_microsoft_com_identity_claims_objectidentifier_g !~ \"None\" and isnotempty(identity_claim_http_schemas_microsoft_com_identity_claims_objectidentifier_g)\n        | where id_s !~ \"None\" and isnotempty(id_s)\n        | where CallerIPAddress !~ \"None\" and isnotempty(CallerIPAddress)\n        | where clientInfo_s !~ \"None\" and isnotempty(clientInfo_s)\n        | where requestUri_s !~ \"None\" and isnotempty(requestUri_s)\n        | where OperationName in~ (OperationList)   \n        )\n        on identity_claim_http_schemas_microsoft_com_identity_claims_objectidentifier_g \n    | summarize\n        EventCount=sum(count_),\n        StartTimeUtc=min(TimeGenerated),\n        EndTimeUtc=max(TimeGenerated),\n        TimeTriggered=makelist(TimeGenerated),\n        OperationNameList=make_set(OperationName),\n        RequestURLList=make_set(requestUri_s),\n        CallerIPList = make_set(CallerIPAddress),\n        CallerIPMax= arg_max(CallerIPAddress, *)\n        by\n        ResourceType,\n        ResultType,\n        Resource,\n        id_s,\n        identity_claim_http_schemas_microsoft_com_identity_claims_objectidentifier_g,\n        clientInfo_s\n    | extend\n        timestamp = EndTimeUtc,\n        IPCustomEntity = CallerIPMax,\n        AccountCustomEntity = identity_claim_http_schemas_microsoft_com_identity_claims_objectidentifier_g\n    | extend HostCustomEntity = SourceSystem;\nlet subnetCheck = alerttable\n    | extend IP = tostring(IPCustomEntity)\n    | extend FirstOctet = toint(split(IP, \".\")[0])\n    | join kind=leftouter MSIPs on FirstOctet\n    | extend IsInSubnet = ipv4_is_in_range(IP, Subnet)\n    | summarize IsInSubnet = max(toint(IsInSubnet)) by IP;\nalerttable\n| extend  identity_claim_upn_s = column_ifexists(\"identity_claim_upn_s\",\"\")\n| join kind=leftouter subnetCheck on $left.IPCustomEntity == $right.IP\n| extend IsInSubnet = tobool(IsInSubnet)\n| where (isnotempty(identity_claim_upn_s)) or (IsInSubnet != true)\n| join kind=leftanti ManagedAttempts on $left.IPCustomEntity == $right.IPAddress\n| where not(ipv4_is_private(IPCustomEntity))",
                                             "queryFrequency":  "PT1H",
                                             "queryPeriod":  "PT1H",
                                             "triggerOperator":  "GreaterThan",
                                             "triggerThreshold":  0,
                                             "suppressionDuration":  "PT5H",
                                             "suppressionEnabled":  false,
                                             "startTimeUtc":  null,
                                             "tactics":  [
                                                             "CredentialAccess"
                                                         ],
                                             "techniques":  [
                                                                "T1003"
                                                            ],
                                             "subTechniques":  [

                                                               ],
                                             "alertRuleTemplateName":  "24f8c234-d1ff-40ec-8b73-96b17a3a9c1c",
                                             "incidentConfiguration":  {
                                                                           "createIncident":  true,
                                                                           "groupingConfiguration":  {
                                                                                                         "enabled":  true,
                                                                                                         "reopenClosedIncident":  false,
                                                                                                         "lookbackDuration":  "PT12H",
                                                                                                         "matchingMethod":  "AllEntities",
                                                                                                         "groupByEntities":  [

                                                                                                                             ],
                                                                                                         "groupByAlertDetails":  null,
                                                                                                         "groupByCustomDetails":  null
                                                                                                     }
                                                                       },
                                             "eventGroupingSettings":  {
                                                                           "aggregationKind":  "SingleAlert"
                                                                       },
                                             "alertDetailsOverride":  null,
                                             "customDetails":  null,
                                             "entityMappings":  [
                                                                    {
                                                                        "entityType":  "Account",
                                                                        "fieldMappings":  [
                                                                                              {
                                                                                                  "identifier":  "FullName",
                                                                                                  "columnName":  "AccountCustomEntity"
                                                                                              }
                                                                                          ]
                                                                    },
                                                                    {
                                                                        "entityType":  "Host",
                                                                        "fieldMappings":  [
                                                                                              {
                                                                                                  "identifier":  "FullName",
                                                                                                  "columnName":  "HostCustomEntity"
                                                                                              }
                                                                                          ]
                                                                    },
                                                                    {
                                                                        "entityType":  "IP",
                                                                        "fieldMappings":  [
                                                                                              {
                                                                                                  "identifier":  "Address",
                                                                                                  "columnName":  "IPCustomEntity"
                                                                                              }
                                                                                          ]
                                                                    }
                                                                ],
                                             "sentinelEntitiesMappings":  null,
                                             "templateVersion":  null
                                         }
                      }
                  ],
    "parameters":  {
                       "workspace":  {
                                         "type":  "String"
                                     }
                   }
}