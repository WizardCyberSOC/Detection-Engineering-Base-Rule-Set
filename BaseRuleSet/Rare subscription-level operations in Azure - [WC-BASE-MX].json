{
    "contentVersion":  "1.0.0.0",
    "$schema":  "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
    "resources":  [
                      {
                          "id":  "[concat(resourceId(\u0027Microsoft.OperationalInsights/workspaces/providers\u0027, parameters(\u0027workspace\u0027), \u0027Microsoft.SecurityInsights\u0027),\u0027/alertRules/c40ce8e0-6307-48c7-a23b-c1c1cd080f40\u0027)]",
                          "name":  "[concat(parameters(\u0027workspace\u0027),\u0027/Microsoft.SecurityInsights/c40ce8e0-6307-48c7-a23b-c1c1cd080f40\u0027)]",
                          "type":  "Microsoft.OperationalInsights/workspaces/providers/alertRules",
                          "kind":  "Scheduled",
                          "apiVersion":  "2023-12-01-preview",
                          "properties":  {
                                             "displayName":  "Rare subscription-level operations in Azure - [WC-BASE-MX]",
                                             "description":  "This query looks for a few sensitive subscription-level events based on Azure Activity Logs. \n For example this monitors for the operation name \u0027Create or Update Snapshot\u0027 which is used for creating backups but could be misused by attackers \n to dump hashes or extract sensitive information from the disk.\nExtended Functionality: This rule uses a watchlist containing Microsoft\u0027s blocks of public IP addresses for tuning purposes.",
                                             "severity":  "Medium",
                                             "enabled":  true,
                                             "query":  "let starttime = 14d;\nlet endtime = 1h;\n// The number of operations below which an IP address is considered an unusual source of role assignment operations\nlet alertOperationThreshold = 5;\nlet IPManagedAttempts = SigninLogs\n    | union AADNonInteractiveUserSignInLogs\n    | where TimeGenerated \u003e ago(14d)\n    | where tostring(parse_json(DeviceDetail_dynamic).trustType) != \"\" or tostring(parse_json(DeviceDetail_string).trustType) != \"\"\n    | distinct IPAddress;\nlet MSIPs = _GetWatchlist(\"MSPublicIPsV2\")\n    | project Subnet = SearchKey, FirstOctet = toint(split(SearchKey, \".\")[0]);\nlet SensitiveOperationList = dynamic(\n    [\"List keys\", \"List Storage Account Keys\", \"Register Subscription\", \"Create or Update Snapshot\", \"Create or Update Network Security Group\"]);\nlet SensitiveActivity = AzureActivity\n    | where OperationName in~ (SensitiveOperationList)\n    | where ActivityStatus =~ \"Succeeded\";\nlet alerttable =\n    SensitiveActivity\n    | where TimeGenerated between (ago(starttime) .. ago(endtime))\n    | summarize count() by CallerIpAddress, Caller\n    | where count_ \u003e= alertOperationThreshold\n    | join kind = rightanti ( \n        SensitiveActivity\n        | where TimeGenerated \u003e= ago(endtime)\n        | summarize\n            StartTimeUtc = min(TimeGenerated),\n            EndTimeUtc = max(TimeGenerated),\n            ActivityTimeStamp = makelist(TimeGenerated),\n            ActivityStatus = makelist(ActivityStatus), \n            OperationIds = makelist(OperationId),\n            CorrelationIds = makelist(CorrelationId),\n            Resources = makelist(Resource),\n            ResourceGroups = makelist(ResourceGroup),\n            ResourceIds = makelist(ResourceId),\n            ActivityCountByCallerIPAddress = count()  \n            by CallerIpAddress, Caller, OperationName\n        )\n        on CallerIpAddress, Caller\n    | extend\n        timestamp = StartTimeUtc,\n        AccountCustomEntity = Caller,\n        IPCustomEntity = CallerIpAddress\n    | where AccountCustomEntity != \"77232642-a6ea-462b-9ab4-a7199af9e714\"\n    | join kind=leftanti IPManagedAttempts on $left.CallerIpAddress == $right.IPAddress;\nlet subnetCheck = alerttable\n    | extend IP = tostring(CallerIpAddress)\n    | extend FirstOctet = toint(split(IP, \".\")[0])\n    | join kind=leftouter MSIPs on FirstOctet\n    | extend IsInSubnet = ipv4_is_in_range(IP, Subnet)\n    | summarize IsInSubnet = max(toint(IsInSubnet)) by CallerIpAddress;\nalerttable\n| join kind=leftouter subnetCheck on CallerIpAddress\n| extend IsInSubnet = tobool(IsInSubnet)\n| where not( Caller !contains \"@\" and IsInSubnet == true)",
                                             "queryFrequency":  "PT1H",
                                             "queryPeriod":  "P14D",
                                             "triggerOperator":  "GreaterThan",
                                             "triggerThreshold":  0,
                                             "suppressionDuration":  "PT5H",
                                             "suppressionEnabled":  false,
                                             "startTimeUtc":  null,
                                             "tactics":  [
                                                             "CredentialAccess",
                                                             "Persistence"
                                                         ],
                                             "techniques":  [
                                                                "T1003",
                                                                "T1098"
                                                            ],
                                             "subTechniques":  [

                                                               ],
                                             "alertRuleTemplateName":  "23de46ea-c425-4a77-b456-511ae4855d69",
                                             "incidentConfiguration":  {
                                                                           "createIncident":  true,
                                                                           "groupingConfiguration":  {
                                                                                                         "enabled":  true,
                                                                                                         "reopenClosedIncident":  false,
                                                                                                         "lookbackDuration":  "PT5H",
                                                                                                         "matchingMethod":  "AllEntities",
                                                                                                         "groupByEntities":  [

                                                                                                                             ],
                                                                                                         "groupByAlertDetails":  [

                                                                                                                                 ],
                                                                                                         "groupByCustomDetails":  [

                                                                                                                                  ]
                                                                                                     }
                                                                       },
                                             "eventGroupingSettings":  {
                                                                           "aggregationKind":  "SingleAlert"
                                                                       },
                                             "alertDetailsOverride":  null,
                                             "customDetails":  {
                                                                   "OperationPerformed":  "OperationName"
                                                               },
                                             "entityMappings":  [
                                                                    {
                                                                        "entityType":  "Account",
                                                                        "fieldMappings":  [
                                                                                              {
                                                                                                  "identifier":  "FullName",
                                                                                                  "columnName":  "Caller"
                                                                                              }
                                                                                          ]
                                                                    },
                                                                    {
                                                                        "entityType":  "IP",
                                                                        "fieldMappings":  [
                                                                                              {
                                                                                                  "identifier":  "Address",
                                                                                                  "columnName":  "CallerIpAddress"
                                                                                              }
                                                                                          ]
                                                                    }
                                                                ],
                                             "sentinelEntitiesMappings":  null,
                                             "templateVersion":  null
                                         }
                      }
                  ],
    "parameters":  {
                       "workspace":  {
                                         "type":  "String"
                                     }
                   }
}