{
    "contentVersion":  "1.0.0.0",
    "$schema":  "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
    "resources":  [
                      {
                          "id":  "[concat(resourceId('Microsoft.OperationalInsights/workspaces/providers', parameters('workspace'), 'Microsoft.SecurityInsights'),'/alertRules/33dba45e-7837-4e19-b8db-1031bd23cb95')]",
                          "name":  "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/33dba45e-7837-4e19-b8db-1031bd23cb95')]",
                          "type":  "Microsoft.OperationalInsights/workspaces/providers/alertRules",
                          "kind":  "Scheduled",
                          "apiVersion":  "2023-12-01-preview",
                          "properties":  {
                                             "displayName":  "Detecting Port Scanning on Internet-Facing Devices - [WC-BASE]",
                                             "description":  "Are you aware of when your endpoints or servers are exposed to the internet? Whether intentional or accidental, itâ€™s crucial to have the capability to detect port scans or attacks and take necessary defensive actions. Iâ€™ve developed a custom DefenderXDR detection KQL that provides this visibility for your fleet of MDE devices.\n// When this custom detection is triggered, you should verify if the device firewall is enabled, check for any critical or high vulnerabilities that could be exploited, and identify the hostile country performing the scan (e.g., Russia - something might be off!). This is an enhanced version of the KQL function InboundExternalNetworkEvents(X), where X is the DeviceID.",
                                             "severity":  "High",
                                             "enabled":  true,
                                             "query":  "let InternetFacingDevice=\r\nDeviceInfo\r\n| where TimeGenerated \u003e ago(14d)\r\n| where isnotempty( IsInternetFacing) and IsInternetFacing != false| summarize arg_max(TimeGenerated, *) by DeviceId\r\n| project DeviceId;\r\nlet PotentialPortScan = \r\nDeviceNetworkEvents\r\n| where TimeGenerated \u003e ago(1h)\r\n| where DeviceId has_any(InternetFacingDevice)\r\n| where ActionType == \"InboundConnectionAccepted\"\r\n| where not(ipv4_is_private(RemoteIP))\r\n| where LocalPort \u003c 1024 // Well-known ports\r\n| summarize ConnectionPorts = dcount(LocalPort) by RemoteIP,DeviceName\r\n| where ConnectionPorts \u003e 10;\r\nDeviceNetworkEvents\r\n| where TimeGenerated \u003e ago(1h)\r\n| where ActionType == \"InboundConnectionAccepted\"\r\n| join kind=inner PotentialPortScan on DeviceName,RemoteIP",
                                             "queryFrequency":  "PT1H",
                                             "queryPeriod":  "PT14H",
                                             "triggerOperator":  "GreaterThan",
                                             "triggerThreshold":  0,
                                             "suppressionDuration":  "PT5H",
                                             "suppressionEnabled":  false,
                                             "startTimeUtc":  null,
                                             "tactics":  [
                                                             "Discovery",
                                                             "Reconnaissance"
                                                         ],
                                             "techniques":  [
                                                                "T1049",
                                                                "T1595",
                                                                "T1046"
                                                            ],
                                             "subTechniques":  [

                                                               ],
                                             "alertRuleTemplateName":  null,
                                             "incidentConfiguration":  {
                                                                           "createIncident":  true,
                                                                           "groupingConfiguration":  {
                                                                                                         "enabled":  false,
                                                                                                         "reopenClosedIncident":  false,
                                                                                                         "lookbackDuration":  "PT5H",
                                                                                                         "matchingMethod":  "AllEntities",
                                                                                                         "groupByEntities":  [

                                                                                                                             ],
                                                                                                         "groupByAlertDetails":  [

                                                                                                                                 ],
                                                                                                         "groupByCustomDetails":  [

                                                                                                                                  ]
                                                                                                     }
                                                                       },
                                             "eventGroupingSettings":  {
                                                                           "aggregationKind":  "SingleAlert"
                                                                       },
                                             "alertDetailsOverride":  null,
                                             "customDetails":  null,
                                             "entityMappings":  [
                                                                    {
                                                                        "entityType":  "Host",
                                                                        "fieldMappings":  [
                                                                                              {
                                                                                                  "identifier":  "FullName",
                                                                                                  "columnName":  "DeviceName"
                                                                                              }
                                                                                          ]
                                                                    },
                                                                    {
                                                                        "entityType":  "Account",
                                                                        "fieldMappings":  [
                                                                                              {
                                                                                                  "identifier":  "Name",
                                                                                                  "columnName":  "ConnectionPorts"
                                                                                              }
                                                                                          ]
                                                                    }
                                                                ],
                                             "sentinelEntitiesMappings":  null,
                                             "templateVersion":  null
                                         }
                      }
                  ],
    "parameters":  {
                       "workspace":  {
                                         "type":  "String"
                                     }
                   }
}