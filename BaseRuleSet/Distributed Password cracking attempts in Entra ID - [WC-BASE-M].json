{
    "contentVersion":  "1.0.0.0",
    "$schema":  "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
    "resources":  [
                      {
                          "id":  "[concat(resourceId(\u0027Microsoft.OperationalInsights/workspaces/providers\u0027, parameters(\u0027workspace\u0027), \u0027Microsoft.SecurityInsights\u0027),\u0027/alertRules/84b5d883-5ff5-4e6b-ac12-ff25c05cd1c2\u0027)]",
                          "name":  "[concat(parameters(\u0027workspace\u0027),\u0027/Microsoft.SecurityInsights/84b5d883-5ff5-4e6b-ac12-ff25c05cd1c2\u0027)]",
                          "type":  "Microsoft.OperationalInsights/workspaces/providers/alertRules",
                          "kind":  "Scheduled",
                          "apiVersion":  "2023-12-01-preview",
                          "properties":  {
                                             "displayName":  "Distributed Password cracking attempts in Entra ID - [WC-BASE-M]",
                                             "description":  "Detects potential distributed password cracking attempts against Azure Entra ID accounts by identifying user sign-in failures with the error code 50055 (expired or invalid password) from multiple geographic locations.",
                                             "severity":  "Medium",
                                             "enabled":  true,
                                             "query":  "let s_threshold = 30;\nlet l_threshold = 3;\nlet aadFunc = (tableName: string) {\n    table(tableName)\n    | where OperationName =~ \"Sign-in activity\"\n    // Error codes that we want to look at as they are related to the use of incorrect password.\n    | where ResultType in (\"50055\")\n    | extend\n        DeviceDetail = todynamic(DeviceDetail),\n        Status = todynamic(DeviceDetail),\n        LocationDetails = todynamic(LocationDetails)\n    | extend OS = DeviceDetail.operatingSystem, Browser = DeviceDetail.browser\n    | extend\n        StatusCode = tostring(Status.errorCode),\n        StatusDetails = tostring(Status.additionalDetails)\n    | extend LocationString = strcat(tostring(LocationDetails.countryOrRegion), \"/\", tostring(LocationDetails.state), \"/\", tostring(LocationDetails.city))\n    | summarize\n        StartTime = min(TimeGenerated),\n        EndTime = max(TimeGenerated),\n        LocationCount=dcount(LocationString),\n        Location = make_set(LocationString, 100),\n        IPAddress = make_set(IPAddress, 100),\n        IPAddressCount = dcount(IPAddress),\n        AppDisplayName = make_set(AppDisplayName, 100),\n        ResultDescription = make_set(ResultDescription, 50),\n        Browser = make_set(Browser, 20),\n        OS = make_set(OS, 20),\n        SigninCount = count()\n        by UserPrincipalName, Type\n    // Setting a generic threshold - Can be different for different environment\n    | where SigninCount \u003e s_threshold and LocationCount \u003e= l_threshold\n    | extend\n        Location = tostring(Location),\n        IPAddress = tostring(IPAddress),\n        AppDisplayName = tostring(AppDisplayName),\n        ResultDescription = tostring(ResultDescription),\n        Browser = tostring(Browser),\n        OS = tostring(OS)\n    | extend\n        Name = tostring(split(UserPrincipalName, \u0027@\u0027, 0)[0]),\n        UPNSuffix = tostring(split(UserPrincipalName, \u0027@\u0027, 1)[0])\n};\nlet aadSignin = aadFunc(\"SigninLogs\");\nlet aadNonInt = aadFunc(\"AADNonInteractiveUserSignInLogs\");\nunion isfuzzy=true aadSignin, aadNonInt",
                                             "queryFrequency":  "P1D",
                                             "queryPeriod":  "P1D",
                                             "triggerOperator":  "GreaterThan",
                                             "triggerThreshold":  0,
                                             "suppressionDuration":  "PT5H",
                                             "suppressionEnabled":  false,
                                             "startTimeUtc":  null,
                                             "tactics":  [
                                                             "CredentialAccess",
                                                             "ResourceDevelopment"
                                                         ],
                                             "techniques":  [
                                                                "T1110",
                                                                "T1583",
                                                                "T1584"
                                                            ],
                                             "subTechniques":  [

                                                               ],
                                             "alertRuleTemplateName":  "bfb1c90f-8006-4325-98be-c7fffbc254d6",
                                             "incidentConfiguration":  {
                                                                           "createIncident":  true,
                                                                           "groupingConfiguration":  {
                                                                                                         "enabled":  true,
                                                                                                         "reopenClosedIncident":  false,
                                                                                                         "lookbackDuration":  "PT5H",
                                                                                                         "matchingMethod":  "AllEntities",
                                                                                                         "groupByEntities":  [

                                                                                                                             ],
                                                                                                         "groupByAlertDetails":  [

                                                                                                                                 ],
                                                                                                         "groupByCustomDetails":  [

                                                                                                                                  ]
                                                                                                     }
                                                                       },
                                             "eventGroupingSettings":  {
                                                                           "aggregationKind":  "SingleAlert"
                                                                       },
                                             "alertDetailsOverride":  {
                                                                          "alertDynamicProperties":  [

                                                                                                     ]
                                                                      },
                                             "customDetails":  {

                                                               },
                                             "entityMappings":  [
                                                                    {
                                                                        "entityType":  "Account",
                                                                        "fieldMappings":  [
                                                                                              {
                                                                                                  "identifier":  "Name",
                                                                                                  "columnName":  "UserPrincipalName"
                                                                                              }
                                                                                          ]
                                                                    },
                                                                    {
                                                                        "entityType":  "IP",
                                                                        "fieldMappings":  [
                                                                                              {
                                                                                                  "identifier":  "Address",
                                                                                                  "columnName":  "IPAddress"
                                                                                              }
                                                                                          ]
                                                                    },
                                                                    {
                                                                        "entityType":  "CloudApplication",
                                                                        "fieldMappings":  [
                                                                                              {
                                                                                                  "identifier":  "Name",
                                                                                                  "columnName":  "AppDisplayName"
                                                                                              }
                                                                                          ]
                                                                    }
                                                                ],
                                             "sentinelEntitiesMappings":  null,
                                             "templateVersion":  "1.0.0"
                                         }
                      }
                  ],
    "parameters":  {
                       "workspace":  {
                                         "type":  "String"
                                     }
                   }
}