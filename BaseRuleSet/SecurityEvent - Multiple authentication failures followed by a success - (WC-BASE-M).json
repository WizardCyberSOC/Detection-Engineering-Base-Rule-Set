{
    "contentVersion":  "1.0.0.0",
    "$schema":  "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
    "resources":  [
                      {
                          "id":  "[concat(resourceId('Microsoft.OperationalInsights/workspaces/providers', parameters('workspace'), 'Microsoft.SecurityInsights'),'/alertRules/8f11eac1-2ac7-402a-af9e-78024e5c1981')]",
                          "name":  "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/8f11eac1-2ac7-402a-af9e-78024e5c1981')]",
                          "type":  "Microsoft.OperationalInsights/workspaces/providers/alertRules",
                          "kind":  "Scheduled",
                          "apiVersion":  "2023-12-01-preview",
                          "properties":  {
                                             "displayName":  "SecurityEvent - Multiple authentication failures followed by a success - [WC-BASE-M]",
                                             "description":  "Identifies accounts who have failed to logon to the domain multiple times in a row, followed by a successful authentication\nwithin a short time frame. Multiple failed attempts followed by a success can be an indication of a brute force attempt or\npossible mis-configuration of a service account within an environment.\nThe lookback is set to 2h and the authentication window and threshold are set to 1h and 5, meaning we need to see a minimum\nof 5 failures followed by a success for an account within 1 hour to surface an alert.",
                                             "severity":  "Low",
                                             "enabled":  true,
                                             "query":  "let timeRange = 2h;\nlet authenticationWindow = 1h;\nlet authenticationThreshold = 5;\nSecurityEvent\n| where TimeGenerated \u003e ago(timeRange)\n| where EventID in (4624, 4625)\n| where IpAddress != \"-\" and isnotempty(Account)\n| extend Outcome = iff(EventID == 4624, \"Success\", \"Failure\")\n// bin outcomes into 10 minute windows to reduce the volume of data\n| summarize OutcomeCount=count() by bin(TimeGenerated, 10m), Account, IpAddress, Computer, Outcome\n| project TimeGenerated, Account, IpAddress, Computer, Outcome, OutcomeCount\n// sort ready for sessionizing - by account and time of the authentication outcome\n| sort by Account asc, TimeGenerated asc\n| serialize\n// sessionize into failure groupings until either the account changes or there is a success\n| extend SessionStartedUtc = row_window_session(TimeGenerated, timeRange, authenticationWindow, Account != prev(Account) or prev(Outcome) == \"Success\")\n// count the failures in each session\n| summarize\n    FailureCountBeforeSuccess=sumif(OutcomeCount, Outcome == \"Failure\"),\n    StartTime=min(TimeGenerated),\n    EndTime=max(TimeGenerated),\n    make_list(Outcome, 128),\n    make_set(Computer, 128),\n    make_set(IpAddress, 128)\n    by SessionStartedUtc, Account\n// the session must not start with a success, and must end with one\n| where array_index_of(list_Outcome, \"Success\") != 0\n| where array_index_of(list_Outcome, \"Success\") == array_length(list_Outcome) - 1\n| project-away SessionStartedUtc, list_Outcome\n// where the number of failures before the success is above the threshold\n| where FailureCountBeforeSuccess \u003e= authenticationThreshold\n// expand out ip and computer for customer entity assignment\n| mv-expand set_IpAddress, set_Computer\n| extend IpAddress = tostring(set_IpAddress), Computer = tostring(set_Computer)\n| extend\n    timestamp=StartTime,\n    NTDomain = split(Account, '\\\\', 0)[0],\n    Name = split(Account, '\\\\', 1)[0],\n    HostName = tostring(split(Computer, '.', 0)[0]),\n    DnsDomain = tostring(strcat_array(array_slice(split(Computer, '.'), 1, -1), '.'))\n| where not( isempty( IpAddress))\n| where not( ipv4_is_private( IpAddress))\n| where IpAddress != \"0.0.0.0\"\n| where IpAddress != \"127.0.0.1\"\n| where not( IpAddress contains \"169.254\")",
                                             "queryFrequency":  "PT2H",
                                             "queryPeriod":  "PT2H",
                                             "triggerOperator":  "GreaterThan",
                                             "triggerThreshold":  0,
                                             "suppressionDuration":  "PT5H",
                                             "suppressionEnabled":  false,
                                             "startTimeUtc":  null,
                                             "tactics":  [
                                                             "CredentialAccess"
                                                         ],
                                             "techniques":  [
                                                                "T1110"
                                                            ],
                                             "subTechniques":  [

                                                               ],
                                             "alertRuleTemplateName":  "cf3ede88-a429-493b-9108-3e46d3c741f7",
                                             "incidentConfiguration":  {
                                                                           "createIncident":  true,
                                                                           "groupingConfiguration":  {
                                                                                                         "enabled":  true,
                                                                                                         "reopenClosedIncident":  false,
                                                                                                         "lookbackDuration":  "PT2H",
                                                                                                         "matchingMethod":  "AllEntities",
                                                                                                         "groupByEntities":  [

                                                                                                                             ],
                                                                                                         "groupByAlertDetails":  [

                                                                                                                                 ],
                                                                                                         "groupByCustomDetails":  [

                                                                                                                                  ]
                                                                                                     }
                                                                       },
                                             "eventGroupingSettings":  {
                                                                           "aggregationKind":  "SingleAlert"
                                                                       },
                                             "alertDetailsOverride":  null,
                                             "customDetails":  {

                                                               },
                                             "entityMappings":  [
                                                                    {
                                                                        "entityType":  "Account",
                                                                        "fieldMappings":  [
                                                                                              {
                                                                                                  "identifier":  "Name",
                                                                                                  "columnName":  "Name"
                                                                                              }
                                                                                          ]
                                                                    },
                                                                    {
                                                                        "entityType":  "Host",
                                                                        "fieldMappings":  [
                                                                                              {
                                                                                                  "identifier":  "HostName",
                                                                                                  "columnName":  "HostName"
                                                                                              },
                                                                                              {
                                                                                                  "identifier":  "DnsDomain",
                                                                                                  "columnName":  "DnsDomain"
                                                                                              }
                                                                                          ]
                                                                    },
                                                                    {
                                                                        "entityType":  "IP",
                                                                        "fieldMappings":  [
                                                                                              {
                                                                                                  "identifier":  "Address",
                                                                                                  "columnName":  "IpAddress"
                                                                                              }
                                                                                          ]
                                                                    }
                                                                ],
                                             "sentinelEntitiesMappings":  null,
                                             "templateVersion":  "1.0.4"
                                         }
                      }
                  ],
    "parameters":  {
                       "workspace":  {
                                         "type":  "String"
                                     }
                   }
}