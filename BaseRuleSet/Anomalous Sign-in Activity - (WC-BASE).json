{
    "contentVersion":  "1.0.0.0",
    "$schema":  "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
    "resources":  [
                      {
                          "id":  "[concat(resourceId('Microsoft.OperationalInsights/workspaces/providers', parameters('workspace'), 'Microsoft.SecurityInsights'),'/alertRules/d6eef2de-5c5d-428c-a269-7a1f803fd71d')]",
                          "name":  "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/d6eef2de-5c5d-428c-a269-7a1f803fd71d')]",
                          "type":  "Microsoft.OperationalInsights/workspaces/providers/alertRules",
                          "kind":  "Scheduled",
                          "apiVersion":  "2023-12-01-preview",
                          "properties":  {
                                             "displayName":  "Anomalous Sign-in Activity - [WC-BASE]",
                                             "description":  "Adversaries may steal the credentials of a specific user or service account using credential access techniques or capture credentials earlier in their reconnaissance process through social engineering as a means of gaining persistence.\" Umbreon, for example, creates valid users to provide access to the system.\n    The query below generates an output of successful sign-in with one or more of the following indications:-\n    - performed by new or recently dormant accounts\n    - where one or more features of the activity deviate from the user, his peers, or the tenant's profile.\n    - performed by a user with risk information from Microsoft Entra ID'",
                                             "severity":  "Medium",
                                             "enabled":  true,
                                             "query":  "let ManagedAttempts = SigninLogs\r\n    | union AADNonInteractiveUserSignInLogs\r\n    | where TimeGenerated \u003e ago(14d)\r\n    | where (tostring(parse_json(DeviceDetail_dynamic).trustType) != \"\" or tostring(parse_json(DeviceDetail_string).trustType) != \"\") or (DeviceDetail_dynamic or DeviceDetail_string contains \"PII Removed\")\r\n    | distinct IPAddress;\r\nBehaviorAnalytics\r\n| where TimeGenerated \u003e ago(1h)\r\n| where ActionType =~ \"Sign-in\"\r\n| where (ActivityInsights.ActionUncommonlyPerformedByUser == \"True\" and ActivityInsights.FirstTimeUserConnectedFromCountry == \"True\" and ActivityInsights.UncommonHighVolumeOfActions == \"True\")\r\n| join kind = inner (\r\n    SigninLogs\r\n    | where  (Status.errorCode == 0 and RiskDetail !~ \"none\")\r\n    )\r\n    on $left.SourceRecordId == $right._ItemId \r\n| extend\r\n    UserPrincipalName = iff(UserPrincipalName has \"#EXT#\", replace_string(tostring(split(UserPrincipalName, \"#\")[0]), \"_\", \"@\"), UserPrincipalName),\r\n    UserName = iff(UserName has \"#EXT#\", replace_string(tostring(split(UserPrincipalName, \"#\")[0]), \"_\", \"@\"), UserName)\r\n| project\r\n    TimeGenerated,\r\n    UserName,\r\n    UserPrincipalName,\r\n    UsersInsights,\r\n    ActivityType,\r\n    ActionType,\r\n    [\"Evidence\"]=ActivityInsights,\r\n    ResourceDisplayName,\r\n    AppDisplayName,\r\n    SourceIPAddress,\r\n    SourceIPLocation,\r\n    SourceDevice,\r\n    DevicesInsights,\r\n    ResourceId\r\n| extend\r\n    Name=tostring(split(UserPrincipalName, \"@\")[0]),\r\n    UPNSuffix=tostring(split(UserPrincipalName, \"@\")[1])\r\n| extend Account_0_Name = Name\r\n| extend Account_0_UPNSuffix = UPNSuffix\r\n| extend IP_0_Address = SourceIPAddress\r\n| extend AzureResource_0_ResourceId = ResourceId\r\n| join kind=leftanti ManagedAttempts on $left.SourceIPAddress == $right.IPAddress",
                                             "queryFrequency":  "PT1H",
                                             "queryPeriod":  "P14D",
                                             "triggerOperator":  "GreaterThan",
                                             "triggerThreshold":  0,
                                             "suppressionDuration":  "PT5H",
                                             "suppressionEnabled":  false,
                                             "startTimeUtc":  null,
                                             "tactics":  [
                                                             "InitialAccess"
                                                         ],
                                             "techniques":  [
                                                                "T1078"
                                                            ],
                                             "subTechniques":  [

                                                               ],
                                             "alertRuleTemplateName":  null,
                                             "incidentConfiguration":  {
                                                                           "createIncident":  true,
                                                                           "groupingConfiguration":  {
                                                                                                         "enabled":  false,
                                                                                                         "reopenClosedIncident":  false,
                                                                                                         "lookbackDuration":  "PT5H",
                                                                                                         "matchingMethod":  "AllEntities",
                                                                                                         "groupByEntities":  [

                                                                                                                             ],
                                                                                                         "groupByAlertDetails":  [

                                                                                                                                 ],
                                                                                                         "groupByCustomDetails":  [

                                                                                                                                  ]
                                                                                                     }
                                                                       },
                                             "eventGroupingSettings":  {
                                                                           "aggregationKind":  "SingleAlert"
                                                                       },
                                             "alertDetailsOverride":  null,
                                             "customDetails":  {

                                                               },
                                             "entityMappings":  [
                                                                    {
                                                                        "entityType":  "Account",
                                                                        "fieldMappings":  [
                                                                                              {
                                                                                                  "identifier":  "FullName",
                                                                                                  "columnName":  "UserPrincipalName"
                                                                                              }
                                                                                          ]
                                                                    },
                                                                    {
                                                                        "entityType":  "IP",
                                                                        "fieldMappings":  [
                                                                                              {
                                                                                                  "identifier":  "Address",
                                                                                                  "columnName":  "SourceIPAddress"
                                                                                              }
                                                                                          ]
                                                                    },
                                                                    {
                                                                        "entityType":  "CloudApplication",
                                                                        "fieldMappings":  [
                                                                                              {
                                                                                                  "identifier":  "Name",
                                                                                                  "columnName":  "AppDisplayName"
                                                                                              }
                                                                                          ]
                                                                    }
                                                                ],
                                             "sentinelEntitiesMappings":  null,
                                             "templateVersion":  null
                                         }
                      }
                  ],
    "parameters":  {
                       "workspace":  {
                                         "type":  "String"
                                     }
                   }
}