{
    "contentVersion":  "1.0.0.0",
    "$schema":  "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
    "resources":  [
                      {
                          "id":  "[concat(resourceId(\u0027Microsoft.OperationalInsights/workspaces/providers\u0027, parameters(\u0027workspace\u0027), \u0027Microsoft.SecurityInsights\u0027),\u0027/alertRules/9f98838e-2ca1-4e30-8f33-441b7fb45b35\u0027)]",
                          "name":  "[concat(parameters(\u0027workspace\u0027),\u0027/Microsoft.SecurityInsights/9f98838e-2ca1-4e30-8f33-441b7fb45b35\u0027)]",
                          "type":  "Microsoft.OperationalInsights/workspaces/providers/alertRules",
                          "kind":  "Scheduled",
                          "apiVersion":  "2023-12-01-preview",
                          "properties":  {
                                             "displayName":  "TI Map Email Entity - [WC-BASE]",
                                             "description":  "This rule maps all related tables\u0027 emails to Microsoft\u0027s Threat Intelligence emails feed.",
                                             "severity":  "Medium",
                                             "enabled":  true,
                                             "query":  "let dt_lookBack = 1h;\r\nlet ioc_lookBack = 14d;\r\nlet emailregex = @\"^[a-zA-Z0-9_.+-]+@[a-zA-Z0-9-]+\\.[a-zA-Z0-9-.]+$\";\r\nlet TI_Emails = ThreatIntelIndicators\r\n| where TimeGenerated \u003e ago(ioc_lookBack)\r\n| distinct TIEntity = ObservableValue\r\n| where isnotempty(TIEntity)\r\n| where TIEntity matches regex emailregex;\r\nunion isfuzzy=true\r\n(\r\n    // SecurityAlert\r\n    TI_Emails\r\n    | join kind=innerunique (\r\n        SecurityAlert\r\n        | where TimeGenerated \u003e= ago(dt_lookBack)\r\n        | extend MSTI = case(AlertName has \"TI map\" and VendorName == \"Microsoft\" and ProductName == \"Azure Sentinel\", true, false)\r\n        | where MSTI == false\r\n        | extend EntitiesDynamicArray = parse_json(Entities)\r\n        | mv-expand EntitiesDynamicArray\r\n        | extend EntityType = tostring(EntitiesDynamicArray.Type),\r\n                 EntityName = tostring(EntitiesDynamicArray.Name),\r\n                 EntityUPNSuffix = tostring(EntitiesDynamicArray.UPNSuffix)\r\n        | where EntityType =~ \"account\"\r\n        | extend EntityEmail = tolower(strcat(EntityName, \"@\", EntityUPNSuffix))\r\n        | where EntityEmail matches regex emailregex\r\n        | extend Alert_TimeGenerated = TimeGenerated\r\n    ) on $left.TIEntity == $right.EntityEmail\r\n    | extend timestamp = Alert_TimeGenerated, AccountCustomEntity = EntityEmail\r\n    | extend case = \"SecurityAlert\"\r\n),\r\n(\r\n    // SecurityEvent + WindowsEvent\r\n    TI_Emails\r\n    | join kind=innerunique (\r\n        union isfuzzy=true\r\n        (\r\n            SecurityEvent\r\n            | where TimeGenerated \u003e= ago(dt_lookBack)\r\n            | where isnotempty(TargetUserName)\r\n            | extend TargetUserName = tolower(TargetUserName)\r\n            | extend SecurityEvent_TimeGenerated = TimeGenerated,\r\n                     SourceTable = \"SecurityEvent\"\r\n        ),\r\n        (\r\n            WindowsEvent\r\n            | where TimeGenerated \u003e= ago(dt_lookBack)\r\n            | extend TargetUserName = tostring(EventData.TargetUserName)\r\n            | where isnotempty(TargetUserName)\r\n            | extend TargetUserName = tolower(TargetUserName)\r\n            | extend SecurityEvent_TimeGenerated = TimeGenerated,\r\n                     SourceTable = \"WindowsEvent\"\r\n        )\r\n    ) on $left.TIEntity == $right.TargetUserName\r\n    | extend timestamp = SecurityEvent_TimeGenerated,\r\n             AccountCustomEntity = TargetUserName,\r\n             case = strcat(\"SecurityEvent_\", SourceTable)\r\n),\r\n(\r\n    // SigninLogs only\r\n    TI_Emails\r\n    | join kind=innerunique (\r\n        SigninLogs\r\n        | where TimeGenerated \u003e= ago(dt_lookBack)\r\n        | where isnotempty(UserPrincipalName)\r\n        | extend UserPrincipalName = tolower(UserPrincipalName)\r\n        | where UserPrincipalName matches regex emailregex\r\n        | extend SigninLogs_TimeGenerated = TimeGenerated\r\n    ) on $left.TIEntity == $right.UserPrincipalName\r\n    | extend timestamp = SigninLogs_TimeGenerated,\r\n             AccountCustomEntity = UserPrincipalName,\r\n             case = \"SigninLogs\"\r\n),\r\n(\r\n    // CommonSecurityLog\r\n    TI_Emails\r\n    | join kind=innerunique (\r\n        CommonSecurityLog\r\n        | where TimeGenerated \u003e= ago(dt_lookBack)\r\n        | where isnotempty(DestinationUserID)\r\n        | extend DestinationUserID = tolower(DestinationUserID)\r\n        | where DestinationUserID matches regex emailregex\r\n        | extend CommonSecurityLog_TimeGenerated = TimeGenerated\r\n    ) on $left.TIEntity == $right.DestinationUserID\r\n    | extend timestamp = CommonSecurityLog_TimeGenerated,\r\n             AccountCustomEntity = DestinationUserID,\r\n             case = \"CommonSecurityLog\"\r\n),\r\n(\r\n    // OfficeActivity\r\n    TI_Emails\r\n    | join kind=innerunique (\r\n        OfficeActivity\r\n        | where TimeGenerated \u003e= ago(dt_lookBack)\r\n        | where isnotempty(UserId)\r\n        | where UserId matches regex emailregex\r\n        | extend OfficeActivity_TimeGenerated = TimeGenerated\r\n    ) on $left.TIEntity == $right.UserId\r\n    | extend timestamp = OfficeActivity_TimeGenerated,\r\n             AccountCustomEntity = UserId,\r\n             case = \"OfficeActivity\"\r\n),\r\n(\r\n    // AzureActivity\r\n    TI_Emails\r\n    | join kind=innerunique (\r\n        AzureActivity\r\n        | where TimeGenerated \u003e= ago(dt_lookBack)\r\n        | where isnotempty(Caller)\r\n        | extend Caller = tolower(Caller)\r\n        | where Caller matches regex emailregex\r\n        | extend AzureActivity_TimeGenerated = TimeGenerated\r\n    ) on $left.TIEntity == $right.Caller\r\n    | extend timestamp = AzureActivity_TimeGenerated,\r\n             AccountCustomEntity = Caller,\r\n             case = \"AzureActivity\"\r\n)",
                                             "queryFrequency":  "PT1H",
                                             "queryPeriod":  "P14D",
                                             "triggerOperator":  "GreaterThan",
                                             "triggerThreshold":  0,
                                             "suppressionDuration":  "PT5H",
                                             "suppressionEnabled":  false,
                                             "startTimeUtc":  null,
                                             "tactics":  [
                                                             "InitialAccess",
                                                             "CommandAndControl"
                                                         ],
                                             "techniques":  [
                                                                "T1078",
                                                                "T1566",
                                                                "T1071"
                                                            ],
                                             "subTechniques":  [

                                                               ],
                                             "alertRuleTemplateName":  null,
                                             "incidentConfiguration":  {
                                                                           "createIncident":  true,
                                                                           "groupingConfiguration":  {
                                                                                                         "enabled":  false,
                                                                                                         "reopenClosedIncident":  false,
                                                                                                         "lookbackDuration":  "PT5H",
                                                                                                         "matchingMethod":  "AllEntities",
                                                                                                         "groupByEntities":  [

                                                                                                                             ],
                                                                                                         "groupByAlertDetails":  [

                                                                                                                                 ],
                                                                                                         "groupByCustomDetails":  [

                                                                                                                                  ]
                                                                                                     }
                                                                       },
                                             "eventGroupingSettings":  {
                                                                           "aggregationKind":  "SingleAlert"
                                                                       },
                                             "alertDetailsOverride":  {
                                                                          "alertDisplayNameFormat":  "TI Map Email Entity to {{case}} - [WC-BASE]",
                                                                          "alertDynamicProperties":  [

                                                                                                     ]
                                                                      },
                                             "customDetails":  {
                                                                   "Case":  "case"
                                                               },
                                             "entityMappings":  [
                                                                    {
                                                                        "entityType":  "Account",
                                                                        "fieldMappings":  [
                                                                                              {
                                                                                                  "identifier":  "FullName",
                                                                                                  "columnName":  "TIEntity"
                                                                                              }
                                                                                          ]
                                                                    }
                                                                ],
                                             "sentinelEntitiesMappings":  null,
                                             "templateVersion":  null
                                         }
                      }
                  ],
    "parameters":  {
                       "workspace":  {
                                         "type":  "String"
                                     }
                   }
}