{
    "contentVersion":  "1.0.0.0",
    "$schema":  "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
    "resources":  [
                      {
                          "id":  "[concat(resourceId('Microsoft.OperationalInsights/workspaces/providers', parameters('workspace'), 'Microsoft.SecurityInsights'),'/alertRules/b23322dc-68a7-4fee-b186-2ae4b2b4faaf')]",
                          "name":  "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/b23322dc-68a7-4fee-b186-2ae4b2b4faaf')]",
                          "type":  "Microsoft.OperationalInsights/workspaces/providers/alertRules",
                          "kind":  "Scheduled",
                          "apiVersion":  "2023-12-01-preview",
                          "properties":  {
                                             "displayName":  "PWS backup failure - [WC-BASE]",
                                             "description":  "Detects when Password Secure backups can't be found in the blob storage of the backup Storage Account in time.",
                                             "severity":  "Medium",
                                             "enabled":  true,
                                             "query":  "StorageBlobLogs\n//| where TimeGenerated \u003e ago(365d)\n| where AccountName == \"stsbackuppwsafepworm01\"\n//| where AuthenticationType == \"OAuth\"\n| where Category == \"StorageWrite\"\n| where StatusText == \"Success\"\n| extend ObjectKeyParts = split(ObjectKey,\"/\")\n| extend Container = ObjectKeyParts[2]\n| extend IpAddress = split(CallerIpAddress,\":\")\n| extend IpAddress = IpAddress[0]\n| where IpAddress in (\"10.44.9.15\", \"10.44.9.14\")\n| extend ObjectId = parse_json(tostring(AuthorizationDetails[0].principals))[0].id\n| summarize arg_max(TimeGenerated,*) by tostring(Container), tostring(IpAddress)\n| project TimeGenerated, AccountName, Container, IpAddress, ObjectId, AuthenticationType\n| extend daily = iff((TimeGenerated \u003c ago(3d)) and (Container == \"pwsafebackup-daily\"), \"0\", \"\")\n| extend daily = iff((TimeGenerated \u003e ago(3d)) and (Container == \"pwsafebackup-daily\"), \"1\", daily)\n| extend weekly = iff((TimeGenerated \u003c ago(8d)) and (Container == \"pwsafebackup-weekly\"), \"0\", \"\")\n| extend weekly = iff((TimeGenerated \u003e ago(8d)) and (Container == \"pwsafebackup-weekly\"), \"1\", weekly)\n| extend monthly = iff((TimeGenerated \u003c ago(32d)) and (Container == \"pwsafebackup-monthly\"), \"0\", \"\")\n| extend monthly = iff((TimeGenerated \u003e ago(32d)) and (Container == \"pwsafebackup-monthly\"), \"1\", monthly)\n| extend yearly = iff((TimeGenerated \u003c ago(365d)) and (Container == \"pwsafebackup-yearly\"), \"0\", \"\")\n| extend yearly = iff((TimeGenerated \u003e ago(365d)) and (Container == \"pwsafebackup-yearly\"), \"1\", yearly)\n//| extend weekly = iff((TimeGenerated \u003c ago(8d)) and (Container == \"pwsafebackup-weekly\"), 0, 1)\n//| extend monthly = iff((TimeGenerated \u003c ago(32d)) and (Container == \"pwsafebackup-monthly\"), 0, 1)\n| where (daily == 0 and Container == \"pwsafebackup-daily\") or (weekly == 0 and Container == \"pwsafebackup-weekly\") or (monthly == 0 and Container == \"pwsafebackup-monthly\") or (yearly == 0 and Container == \"pwsafebackup-yearly\")",
                                             "queryFrequency":  "P1D",
                                             "queryPeriod":  "P14D",
                                             "triggerOperator":  "GreaterThan",
                                             "triggerThreshold":  0,
                                             "suppressionDuration":  "PT5H",
                                             "suppressionEnabled":  false,
                                             "startTimeUtc":  null,
                                             "tactics":  [
                                                             "Impact"
                                                         ],
                                             "techniques":  [
                                                                "T0837",
                                                                "T0831",
                                                                "T1565",
                                                                "T1641"
                                                            ],
                                             "subTechniques":  [
                                                                   "T1565.002",
                                                                   "T1641.001"
                                                               ],
                                             "alertRuleTemplateName":  null,
                                             "incidentConfiguration":  {
                                                                           "createIncident":  true,
                                                                           "groupingConfiguration":  {
                                                                                                         "enabled":  false,
                                                                                                         "reopenClosedIncident":  false,
                                                                                                         "lookbackDuration":  "PT5H",
                                                                                                         "matchingMethod":  "AllEntities",
                                                                                                         "groupByEntities":  [

                                                                                                                             ],
                                                                                                         "groupByAlertDetails":  [

                                                                                                                                 ],
                                                                                                         "groupByCustomDetails":  [

                                                                                                                                  ]
                                                                                                     }
                                                                       },
                                             "eventGroupingSettings":  {
                                                                           "aggregationKind":  "SingleAlert"
                                                                       },
                                             "alertDetailsOverride":  {
                                                                          "alertDynamicProperties":  [

                                                                                                     ]
                                                                      },
                                             "customDetails":  {
                                                                   "StorageAccountName":  "AccountName",
                                                                   "LastBackupTime":  "TimeGenerated",
                                                                   "BlobStorageContainer":  "Container",
                                                                   "AuthenticationType":  "AuthenticationType"
                                                               },
                                             "entityMappings":  [
                                                                    {
                                                                        "entityType":  "IP",
                                                                        "fieldMappings":  [
                                                                                              {
                                                                                                  "identifier":  "Address",
                                                                                                  "columnName":  "IpAddress"
                                                                                              }
                                                                                          ]
                                                                    },
                                                                    {
                                                                        "entityType":  "Account",
                                                                        "fieldMappings":  [
                                                                                              {
                                                                                                  "identifier":  "AadUserId",
                                                                                                  "columnName":  "ObjectId"
                                                                                              }
                                                                                          ]
                                                                    }
                                                                ],
                                             "sentinelEntitiesMappings":  null,
                                             "templateVersion":  null
                                         }
                      }
                  ],
    "parameters":  {
                       "workspace":  {
                                         "type":  "String"
                                     }
                   }
}