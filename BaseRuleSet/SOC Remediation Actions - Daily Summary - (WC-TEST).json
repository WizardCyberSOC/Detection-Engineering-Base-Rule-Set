{
    "contentVersion":  "1.0.0.0",
    "$schema":  "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
    "resources":  [
                      {
                          "id":  "[concat(resourceId('Microsoft.OperationalInsights/workspaces/providers', parameters('workspace'), 'Microsoft.SecurityInsights'),'/alertRules/d025ca7c-210a-49ff-80c5-3d9175376cd3')]",
                          "name":  "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/d025ca7c-210a-49ff-80c5-3d9175376cd3')]",
                          "type":  "Microsoft.OperationalInsights/workspaces/providers/alertRules",
                          "kind":  "Scheduled",
                          "apiVersion":  "2023-12-01-preview",
                          "properties":  {
                                             "displayName":  "SOC Remediation Actions - Daily Summary - [WC-TEST]",
                                             "description":  "This alert provides a daily summary of remediation actions performed by the SOC across MDO, Entra, and MDE.",
                                             "severity":  "Informational",
                                             "enabled":  false,
                                             "query":  "let NoDs = 24h;\r\n// --- MDO summary as scalar\r\nlet MDO_Summary = toscalar(\r\n    EmailPostDeliveryEvents\r\n    | where TimeGenerated \u003e ago(NoDs)\r\n    | where ActionType == \"Manual Remediation\"\r\n    | where DeliveryLocation == \"Delete\"\r\n    | summarize TotalCount = count()\r\n    | extend Actions = iff(TotalCount\u003e0, \"Email Soft Deletion\", \"N/A\"),\r\n             Targets = \"N/A\"\r\n    | project Summary = strcat(\r\n        \"Event Type: SOC Actions From MDO\",\r\n        \"\\nActions: \", Actions,\r\n        \"\\nCount: \", tostring(TotalCount),\r\n        \"\\nTargets: \", Targets\r\n    )\r\n);\r\n// --- Entra summary as scalar\r\nlet Entra_Summary = toscalar(\r\n    AuditLogs\r\n    | where TimeGenerated \u003e ago(NoDs)\r\n    | where OperationName in (\"Update StsRefreshTokenValidFrom Timestamp\", \"Disable account\", \"Enable account\", \"Reset password (by admin)\", \"Admin deleted security info\")\r\n    | extend InitiatorUPN = tostring(parse_json(tostring(InitiatedBy.user)).userPrincipalName),\r\n             TargetUPN = tostring(TargetResources[0].userPrincipalName)\r\n    | where InitiatorUPN endswith \"@wizardcyber.com\"\r\n    | where TargetUPN !contains \"wizardcyber.com\"\r\n    | extend TargetUPN = iff(isempty(TargetUPN), \"N/A\", TargetUPN)\r\n    | summarize TotalCount = count(), ActionsSet = make_set(OperationName), TargetsSet = make_set(TargetUPN)\r\n    | extend Actions = iff(array_length(ActionsSet)\u003e0, strcat_array(ActionsSet, \", \"), \"N/A\"),\r\n             Targets = iff(array_length(TargetsSet)\u003e0, strcat_array(TargetsSet, \", \"), \"N/A\")\r\n    | project Summary = strcat(\r\n        \"Event Type: SOC Actions From Entra\",\r\n        \"\\nActions: \", Actions,\r\n        \"\\nCount: \", tostring(TotalCount),\r\n        \"\\nTargets: \", Targets\r\n    )\r\n);\r\n// --- MDE summary as scalar\r\nlet MDE_Summary = toscalar(\r\n    CloudAppEvents\r\n    | where TimeGenerated \u003e ago(NoDs)\r\n    | where ActionType in (\"CollectInvestigationPackage\", \"AddIndicator\", \"EditIndicator\", \"DeleteIndicator\", \"RunAntiVirusScan\", \"RemediationActionAdded\", \"IsolateDevice\", \"DownloadFile\")\r\n    | extend InitiatorUPN = tostring(RawEventData.UserId)\r\n    | where InitiatorUPN endswith \"@wizardcyber.com\"\r\n    | summarize TotalCount = count(), ActionsSet = make_set(ActionType), TargetsSet = make_set(case(ActionType == \"RunAntiVirusScan\", tostring(RawEventData.DeviceName), \"N/A\"))\r\n    | extend Actions = iff(array_length(ActionsSet)\u003e0, strcat_array(ActionsSet, \", \"), \"N/A\"),\r\n             Targets = iff(array_length(TargetsSet)\u003e0, strcat_array(TargetsSet, \", \"), \"N/A\")\r\n    | project Summary = strcat(\r\n        \"Event Type: SOC Actions From MDE\",\r\n        \"\\nActions: \", Actions,\r\n        \"\\nCount: \", tostring(TotalCount),\r\n        \"\\nTargets: \", Targets\r\n    )\r\n);\r\n// --- Combine and filter only if at least one Actions â‰  N/A\r\nlet Combined = strcat(MDO_Summary, \"\\n\\n\", Entra_Summary, \"\\n\\n\", MDE_Summary);\r\nprint CustomEntity = Combined\r\n| where CustomEntity !contains \"Actions: N/A\\nCount: 0\\nTargets: N/A\" // filter case\r\n   or CustomEntity has \"Actions: Email Soft Deletion\" \r\n   or CustomEntity has \"Actions: Disable account\"\r\n   or CustomEntity has \"Actions: Enable account\"\r\n   or CustomEntity has \"Actions: Reset password (by admin)\"\r\n   or CustomEntity has \"Actions: Admin deleted security info\"\r\n   or CustomEntity has \"Actions: CollectInvestigationPackage\"\r\n   or CustomEntity has \"Actions: AddIndicator\"\r\n   or CustomEntity has \"Actions: EditIndicator\"\r\n   or CustomEntity has \"Actions: DeleteIndicator\"\r\n   or CustomEntity has \"Actions: RunAntiVirusScan\"\r\n   or CustomEntity has \"Actions: RemediationActionAdded\"\r\n   or CustomEntity has \"Actions: IsolateDevice\"\r\n   or CustomEntity has \"Actions: DownloadFile\";",
                                             "queryFrequency":  "P1D",
                                             "queryPeriod":  "P1D",
                                             "triggerOperator":  "GreaterThan",
                                             "triggerThreshold":  0,
                                             "suppressionDuration":  "PT5H",
                                             "suppressionEnabled":  false,
                                             "startTimeUtc":  null,
                                             "tactics":  [

                                                         ],
                                             "techniques":  [

                                                            ],
                                             "subTechniques":  [

                                                               ],
                                             "alertRuleTemplateName":  null,
                                             "incidentConfiguration":  {
                                                                           "createIncident":  true,
                                                                           "groupingConfiguration":  {
                                                                                                         "enabled":  false,
                                                                                                         "reopenClosedIncident":  false,
                                                                                                         "lookbackDuration":  "PT5H",
                                                                                                         "matchingMethod":  "AllEntities",
                                                                                                         "groupByEntities":  [

                                                                                                                             ],
                                                                                                         "groupByAlertDetails":  [

                                                                                                                                 ],
                                                                                                         "groupByCustomDetails":  [

                                                                                                                                  ]
                                                                                                     }
                                                                       },
                                             "eventGroupingSettings":  {
                                                                           "aggregationKind":  "SingleAlert"
                                                                       },
                                             "alertDetailsOverride":  {
                                                                          "alertDynamicProperties":  [

                                                                                                     ]
                                                                      },
                                             "customDetails":  {
                                                                   "CustomEntity":  "CustomEntity"
                                                               },
                                             "entityMappings":  null,
                                             "sentinelEntitiesMappings":  null,
                                             "templateVersion":  null
                                         }
                      }
                  ],
    "parameters":  {
                       "workspace":  {
                                         "type":  "String"
                                     }
                   }
}