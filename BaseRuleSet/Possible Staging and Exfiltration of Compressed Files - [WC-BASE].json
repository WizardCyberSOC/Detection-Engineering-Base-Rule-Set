{
    "contentVersion":  "1.0.0.0",
    "$schema":  "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
    "resources":  [
                      {
                          "id":  "[concat(resourceId(\u0027Microsoft.OperationalInsights/workspaces/providers\u0027, parameters(\u0027workspace\u0027), \u0027Microsoft.SecurityInsights\u0027),\u0027/alertRules/d556f5bc-b428-456d-ba2d-699625101b11\u0027)]",
                          "name":  "[concat(parameters(\u0027workspace\u0027),\u0027/Microsoft.SecurityInsights/d556f5bc-b428-456d-ba2d-699625101b11\u0027)]",
                          "type":  "Microsoft.OperationalInsights/workspaces/providers/alertRules",
                          "kind":  "Scheduled",
                          "apiVersion":  "2023-12-01-preview",
                          "properties":  {
                                             "displayName":  "Possible Staging and Exfiltration of Compressed Files - [WC-BASE]",
                                             "description":  "This rule identifies potential data exfiltration activities related to the transfer of compressed files (e.g., .zip, .rar, .7z) using WinRAR.exe and Explorer.EXE. It focuses on detecting the following behaviors:\n\n\t1) Sensitive File Read: Detects when sensitive files are being accessed by processes like WinRAR.exe or Explorer.EXE, which could indicate preparation for exfiltration.\n\n\t2) File Creation: Flags the creation of compressed files (e.g., .zip, .rar, .7z) using WinRAR.exe or Explorer.EXE, which are often used to bundle and stage data for exfiltration.\n\n\t3) Cloud Upload: Monitors when these compressed files are uploaded to the cloud, a common method for exfiltrating staged data.",
                                             "severity":  "Medium",
                                             "enabled":  true,
                                             "query":  "let Files = \r\n    union\r\n        (\r\n        DeviceEvents\r\n        | where TimeGenerated \u003e ago(1d)\r\n        | where ActionType == \"SensitiveFileRead\"\r\n        | extend FileActionType = ActionType\r\n        | where isnotempty(InitiatingProcessAccountUpn)\r\n        | where InitiatingProcessCommandLine contains \"WinRAR.exe\" and InitiatingProcessCommandLine !contains \"-iext\"\r\n        | project\r\n            TimeGenerated,\r\n            InitiatingProcessAccountUpn,\r\n            InitiatingProcessCommandLine,\r\n            FileActionType,\r\n            FileName,\r\n            FolderPath,\r\n            DeviceName,\r\n            DeviceId\r\n        ),\r\n        ( \r\n        DeviceFileEvents\r\n        | where TimeGenerated \u003e ago(1d)\r\n        | where ActionType == \"FileCreated\" \r\n        | extend FileActionType = ActionType\r\n        | where FileName has_any (\".zip\", \".rar\", \".7z\") \r\n        | where InitiatingProcessCommandLine contains \"WinRAR.exe\" or InitiatingProcessCommandLine contains \"Explorer.EXE\"\r\n        | where isnotempty(InitiatingProcessAccountUpn)\r\n        | project\r\n            TimeGenerated,\r\n            InitiatingProcessAccountUpn,\r\n            InitiatingProcessCommandLine,\r\n            FileActionType,\r\n            FileName,\r\n            FolderPath,\r\n            DeviceName,\r\n            DeviceId\r\n        )\r\n    | sort by TimeGenerated desc;\r\nlet FilesCount = \r\nCloudAppEvents\r\n| where TimeGenerated \u003e ago(1h)\r\n| where ActionType contains \"FileUploadedToCloud\"\r\n| extend InitiatingProcessAccountUpn = tostring(RawEventData.UserId)\r\n| extend FileName = tostring(split(RawEventData.ObjectId, \"\\\\\")[-1])\r\n| extend DeviceName = tostring(RawEventData.DeviceName)\r\n| extend TargetURL = tostring(RawEventData.TargetUrl)\r\n| where FileName has_any (\".zip\", \".rar\", \".7z\") \r\n| join kind=inner Files on FileName, DeviceName, InitiatingProcessAccountUpn\r\n| project\r\n    TimeGenerated,\r\n    InitiatingProcessAccountUpn,\r\n    DeviceName,\r\n    FileActionType,\r\n    ActionType,\r\n    FileName,\r\n    TargetURL\r\n| summarize Files = make_set(FileName), FilesCount = dcount(FileName) by DeviceName,InitiatingProcessAccountUpn;\r\nCloudAppEvents\r\n| where TimeGenerated \u003e ago(1h)\r\n| where ActionType contains \"FileUploadedToCloud\"\r\n| extend InitiatingProcessAccountUpn = tostring(RawEventData.UserId)\r\n| extend FileName = tostring(split(RawEventData.ObjectId, \"\\\\\")[-1])\r\n| extend DeviceName = tostring(RawEventData.DeviceName)\r\n| extend TargetURL = tostring(RawEventData.TargetUrl)\r\n| where FileName has_any (\".zip\", \".rar\", \".7z\") \r\n| join kind=inner Files on FileName, DeviceName, InitiatingProcessAccountUpn\r\n| join kind=leftouter FilesCount on DeviceName,InitiatingProcessAccountUpn\r\n| project\r\n    TimeGenerated,\r\n    InitiatingProcessAccountUpn,\r\n    DeviceName,\r\n    FileActionType,\r\n    ActionType,\r\n    FileName,\r\n    TargetURL,\r\n    FilesCount,\r\n    Files\r\n    | where FilesCount \u003e 20",
                                             "queryFrequency":  "PT1H",
                                             "queryPeriod":  "P1D",
                                             "triggerOperator":  "GreaterThan",
                                             "triggerThreshold":  0,
                                             "suppressionDuration":  "PT5H",
                                             "suppressionEnabled":  false,
                                             "startTimeUtc":  null,
                                             "tactics":  [
                                                             "Collection",
                                                             "CommandAndControl"
                                                         ],
                                             "techniques":  [
                                                                "T1074",
                                                                "T1560",
                                                                "T1071"
                                                            ],
                                             "subTechniques":  [

                                                               ],
                                             "alertRuleTemplateName":  null,
                                             "incidentConfiguration":  {
                                                                           "createIncident":  true,
                                                                           "groupingConfiguration":  {
                                                                                                         "enabled":  false,
                                                                                                         "reopenClosedIncident":  false,
                                                                                                         "lookbackDuration":  "PT5H",
                                                                                                         "matchingMethod":  "AllEntities",
                                                                                                         "groupByEntities":  [

                                                                                                                             ],
                                                                                                         "groupByAlertDetails":  [

                                                                                                                                 ],
                                                                                                         "groupByCustomDetails":  [

                                                                                                                                  ]
                                                                                                     }
                                                                       },
                                             "eventGroupingSettings":  {
                                                                           "aggregationKind":  "SingleAlert"
                                                                       },
                                             "alertDetailsOverride":  null,
                                             "customDetails":  null,
                                             "entityMappings":  [
                                                                    {
                                                                        "entityType":  "Account",
                                                                        "fieldMappings":  [
                                                                                              {
                                                                                                  "identifier":  "Name",
                                                                                                  "columnName":  "InitiatingProcessAccountUpn"
                                                                                              }
                                                                                          ]
                                                                    },
                                                                    {
                                                                        "entityType":  "File",
                                                                        "fieldMappings":  [
                                                                                              {
                                                                                                  "identifier":  "Name",
                                                                                                  "columnName":  "FileName"
                                                                                              }
                                                                                          ]
                                                                    },
                                                                    {
                                                                        "entityType":  "URL",
                                                                        "fieldMappings":  [
                                                                                              {
                                                                                                  "identifier":  "Url",
                                                                                                  "columnName":  "TargetURL"
                                                                                              }
                                                                                          ]
                                                                    }
                                                                ],
                                             "sentinelEntitiesMappings":  null,
                                             "templateVersion":  null
                                         }
                      }
                  ],
    "parameters":  {
                       "workspace":  {
                                         "type":  "String"
                                     }
                   }
}