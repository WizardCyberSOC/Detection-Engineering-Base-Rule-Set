{
    "contentVersion":  "1.0.0.0",
    "$schema":  "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
    "resources":  [
                      {
                          "id":  "[concat(resourceId('Microsoft.OperationalInsights/workspaces/providers', parameters('workspace'), 'Microsoft.SecurityInsights'),'/alertRules/9474e2dd-91e1-40c7-8dc9-634da7a20fb8')]",
                          "name":  "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/9474e2dd-91e1-40c7-8dc9-634da7a20fb8')]",
                          "type":  "Microsoft.OperationalInsights/workspaces/providers/alertRules",
                          "kind":  "Scheduled",
                          "apiVersion":  "2023-12-01-preview",
                          "properties":  {
                                             "displayName":  "Vectra - Alert Detected Category: Command and Control - [WC-BASE]",
                                             "description":  "An alert has been generated in Vectra.",
                                             "severity":  "Medium",
                                             "enabled":  true,
                                             "query":  "let WizardUsers = _GetWatchlist(\"WizardUsers\")\r\n| project UPN = SearchKey;\r\nVectraDetections\r\n| where ['Detection Category'] == \"command_and_control\"\r\n| extend\r\n    DataColumnSize = strlen(Details),\r\n    DetectionDetailsColumnSize = strlen(['Detection Details'])\r\n| extend Details = iff(DataColumnSize \u003e 10000, \"Log size too large, please run the query \\\"VectraDetections\\\" manually to get the logs\", Details)\r\n| extend ['Detection Details'] = iff(DetectionDetailsColumnSize \u003e 10000, \"Log size too large, please run the query \\\"VectraDetections\\\" manually to get the logs\", ['Detection Details'])\r\n| project-away DataColumnSize, DetectionDetailsColumnSize\r\n| where not( (['Detection Name'] == \"Azure AD Redundant Access Creation\") and  (tostring(parse_json(Details)[0].target) has_any (WizardUsers)) and (['Entity UID'] == \"O365:serviceprincipal_c0a6b266-1b2f-4ef2-a735-9fe73c08f761\"))\r\n| where not( (['Detection Name'] == \"Azure AD Suspicious Sign-On\") and isnotempty(tostring(parse_json(Details)[0].device_name)))",
                                             "queryFrequency":  "PT1H",
                                             "queryPeriod":  "PT1H",
                                             "triggerOperator":  "GreaterThan",
                                             "triggerThreshold":  0,
                                             "suppressionDuration":  "PT5H",
                                             "suppressionEnabled":  false,
                                             "startTimeUtc":  null,
                                             "tactics":  [
                                                             "CommandAndControl"
                                                         ],
                                             "techniques":  [

                                                            ],
                                             "subTechniques":  [

                                                               ],
                                             "alertRuleTemplateName":  null,
                                             "incidentConfiguration":  {
                                                                           "createIncident":  true,
                                                                           "groupingConfiguration":  {
                                                                                                         "enabled":  false,
                                                                                                         "reopenClosedIncident":  false,
                                                                                                         "lookbackDuration":  "PT5H",
                                                                                                         "matchingMethod":  "AllEntities",
                                                                                                         "groupByEntities":  [

                                                                                                                             ],
                                                                                                         "groupByAlertDetails":  [

                                                                                                                                 ],
                                                                                                         "groupByCustomDetails":  [

                                                                                                                                  ]
                                                                                                     }
                                                                       },
                                             "eventGroupingSettings":  {
                                                                           "aggregationKind":  "SingleAlert"
                                                                       },
                                             "alertDetailsOverride":  null,
                                             "customDetails":  null,
                                             "entityMappings":  null,
                                             "sentinelEntitiesMappings":  null,
                                             "templateVersion":  null
                                         }
                      }
                  ],
    "parameters":  {
                       "workspace":  {
                                         "type":  "String"
                                     }
                   }
}