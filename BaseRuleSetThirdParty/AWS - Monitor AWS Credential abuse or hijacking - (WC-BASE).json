{
    "contentVersion":  "1.0.0.0",
    "$schema":  "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
    "resources":  [
                      {
                          "id":  "[concat(resourceId('Microsoft.OperationalInsights/workspaces/providers', parameters('workspace'), 'Microsoft.SecurityInsights'),'/alertRules/172bdbe0-06c6-4faf-bdd8-0d11d73ed21d')]",
                          "name":  "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/172bdbe0-06c6-4faf-bdd8-0d11d73ed21d')]",
                          "type":  "Microsoft.OperationalInsights/workspaces/providers/alertRules",
                          "kind":  "Scheduled",
                          "apiVersion":  "2023-12-01-preview",
                          "properties":  {
                                             "displayName":  "AWS - Monitor AWS Credential abuse or hijacking - [WC-BASE]",
                                             "description":  "Looking for GetCallerIdentity Events where the UserID Type is AssumedRole\nAn attacker who has assumed the role of a legitimate account can call the GetCallerIdentity function to determine what account they are using.\nA legitimate user using legitimate credentials would not need to call GetCallerIdentity since they should already know what account they are using.\nMore Information: https://duo.com/decipher/trailblazer-hunts-compromised-credentials-in-aws \nAWS STS GetCallerIdentity API: https://docs.aws.amazon.com/STS/latest/APIReference/API_GetCallerIdentity.html ",
                                             "severity":  "Low",
                                             "enabled":  true,
                                             "query":  "AWSCloudTrail\n| where EventName =~ \"GetCallerIdentity\" and UserIdentityType =~ \"AssumedRole\"\n| extend UserIdentityArn = iif(isempty(UserIdentityArn), tostring(parse_json(Resources)[0].ARN), UserIdentityArn)\n| extend UserName = tostring(split(UserIdentityArn, '/')[-1])\n| extend AccountName = case( UserIdentityPrincipalid == \"Anonymous\", \"Anonymous\", isempty(UserIdentityUserName), UserName, UserIdentityUserName)\n| extend AccountName = iif(AccountName contains \"@\", tostring(split(AccountName, '@', 0)[0]), AccountName),\n  AccountUPNSuffix = iif(AccountName contains \"@\", tostring(split(AccountName, '@', 1)[0]), \"\")\n| summarize StartTime = min(TimeGenerated), EndTime = max(TimeGenerated) by SourceIpAddress, EventName, EventTypeName, UserIdentityType, RecipientAccountId, AccountName, AccountUPNSuffix, UserIdentityAccountId, UserIdentityPrincipalid,\nUserAgent, UserIdentityUserName, SessionMfaAuthenticated,AWSRegion, EventSource, AdditionalEventData, ResponseElements\n| extend timestamp = StartTime\n| sort by EndTime desc nulls last\n| where not((SourceIpAddress == \"18.134.114.226\" or SourceIpAddress == \"35.178.3.184\" or SourceIpAddress == \"eks-nodegroup.amazonaws.com\") and (EventName == \"GetCallerIdentity\") and (EventTypeName == \"AwsApiCall\") and (UserIdentityType == \"AssumedRole\") and (AccountName == \"i-0bea12c45257cef4b\" or AccountName == \"EKS\" or AccountName == \"i-06228bac7d9e576ad\" or AccountName == \"i-0afe3b5540f838d57\" or AccountName == \"i-0f6e5a4065670b09e\" or AccountName == \"i-02626f1de0ec83449\" or AccountName == \"i-034b246467d496b7a\" or AccountName == \"i-05c5439266308cf0b\" or AccountName == \"i-06b849693e890238f\") and (UserAgent == \"Go-http-client/1.1\" or UserAgent == \"eks-nodegroup.amazonaws.com\") and (EventSource == \"sts.amazonaws.com\")) //Based on past alerts, the following conditions have been deemed as benign.\n| where SourceIpAddress \u003c\u003e \"18.134.114.226\"\n| where SourceIpAddress \u003c\u003e \"35.178.3.184\"",
                                             "queryFrequency":  "PT1H",
                                             "queryPeriod":  "PT1H",
                                             "triggerOperator":  "GreaterThan",
                                             "triggerThreshold":  0,
                                             "suppressionDuration":  "PT1H",
                                             "suppressionEnabled":  false,
                                             "startTimeUtc":  null,
                                             "tactics":  [
                                                             "Discovery",
                                                             "CredentialAccess"
                                                         ],
                                             "techniques":  [
                                                                "T1087",
                                                                "T1606"
                                                            ],
                                             "subTechniques":  [

                                                               ],
                                             "alertRuleTemplateName":  "32555639-b639-4c2b-afda-c0ae0abefa55",
                                             "incidentConfiguration":  {
                                                                           "createIncident":  true,
                                                                           "groupingConfiguration":  {
                                                                                                         "enabled":  false,
                                                                                                         "reopenClosedIncident":  false,
                                                                                                         "lookbackDuration":  "PT5H",
                                                                                                         "matchingMethod":  "AllEntities",
                                                                                                         "groupByEntities":  [

                                                                                                                             ],
                                                                                                         "groupByAlertDetails":  [

                                                                                                                                 ],
                                                                                                         "groupByCustomDetails":  [

                                                                                                                                  ]
                                                                                                     }
                                                                       },
                                             "eventGroupingSettings":  {
                                                                           "aggregationKind":  "SingleAlert"
                                                                       },
                                             "alertDetailsOverride":  null,
                                             "customDetails":  null,
                                             "entityMappings":  [
                                                                    {
                                                                        "entityType":  "Account",
                                                                        "fieldMappings":  [
                                                                                              {
                                                                                                  "identifier":  "Name",
                                                                                                  "columnName":  "AccountName"
                                                                                              },
                                                                                              {
                                                                                                  "identifier":  "UPNSuffix",
                                                                                                  "columnName":  "AccountUPNSuffix"
                                                                                              },
                                                                                              {
                                                                                                  "identifier":  "CloudAppAccountId",
                                                                                                  "columnName":  "RecipientAccountId"
                                                                                              }
                                                                                          ]
                                                                    },
                                                                    {
                                                                        "entityType":  "IP",
                                                                        "fieldMappings":  [
                                                                                              {
                                                                                                  "identifier":  "Address",
                                                                                                  "columnName":  "SourceIpAddress"
                                                                                              }
                                                                                          ]
                                                                    }
                                                                ],
                                             "sentinelEntitiesMappings":  null,
                                             "templateVersion":  "1.0.3"
                                         }
                      }
                  ],
    "parameters":  {
                       "workspace":  {
                                         "type":  "String"
                                     }
                   }
}